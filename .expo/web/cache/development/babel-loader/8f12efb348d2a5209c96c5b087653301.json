{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _useCarouselController = require(\"./hooks/useCarouselController\");\n\nvar _useAutoPlay2 = require(\"./hooks/useAutoPlay\");\n\nvar _usePropsErrorBoundary = require(\"./hooks/usePropsErrorBoundary\");\n\nvar _ScrollViewGesture = require(\"./ScrollViewGesture\");\n\nvar _useVisibleRanges = require(\"./hooks/useVisibleRanges\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _BaseLayout = require(\"./layouts/BaseLayout\");\n\nvar _useLayoutConfig = require(\"./hooks/useLayoutConfig\");\n\nvar _useInitProps = require(\"./hooks/useInitProps\");\n\nvar _store = require(\"./store\");\n\nvar _useCommonVariables = require(\"./hooks/useCommonVariables\");\n\nvar _useOnProgressChange = require(\"./hooks/useOnProgressChange\");\n\nvar _computedWithAutoFillData = require(\"./utils/computedWithAutoFillData\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/Carousel.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar Carousel = _react.default.forwardRef(function (_props, ref) {\n  var props = (0, _useInitProps.useInitProps)(_props);\n  var testID = props.testID,\n      data = props.data,\n      rawData = props.rawData,\n      loop = props.loop,\n      autoFillData = props.autoFillData,\n      mode = props.mode,\n      style = props.style,\n      width = props.width,\n      height = props.height,\n      vertical = props.vertical,\n      autoPlay = props.autoPlay,\n      windowSize = props.windowSize,\n      autoPlayReverse = props.autoPlayReverse,\n      autoPlayInterval = props.autoPlayInterval,\n      scrollAnimationDuration = props.scrollAnimationDuration,\n      withAnimation = props.withAnimation,\n      renderItem = props.renderItem,\n      onScrollEnd = props.onScrollEnd,\n      onSnapToItem = props.onSnapToItem,\n      _onScrollBegin = props.onScrollBegin,\n      onProgressChange = props.onProgressChange,\n      customAnimation = props.customAnimation,\n      defaultIndex = props.defaultIndex;\n  var commonVariables = (0, _useCommonVariables.useCommonVariables)(props);\n  var size = commonVariables.size,\n      handlerOffsetX = commonVariables.handlerOffsetX;\n  var dataLength = data.length;\n  var offsetX = (0, _reactNativeReanimated.useDerivedValue)(function () {\n    var _f = function _f() {\n      var totalSize = size * dataLength;\n      var x = handlerOffsetX.value % totalSize;\n\n      if (!loop) {\n        return handlerOffsetX.value;\n      }\n\n      return isNaN(x) ? 0 : x;\n    };\n\n    _f._closure = {\n      size: size,\n      dataLength: dataLength,\n      handlerOffsetX: handlerOffsetX,\n      loop: loop\n    };\n    _f.asString = \"function _f(){const{size,dataLength,handlerOffsetX,loop}=jsThis._closure;{const totalSize=size*dataLength;const x=handlerOffsetX.value%totalSize;if(!loop){return handlerOffsetX.value;}return isNaN(x)?0:x;}}\";\n    _f.__workletHash = 17456063948631;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/Carousel.tsx (54:40)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [loop, size, dataLength]);\n  (0, _usePropsErrorBoundary.usePropsErrorBoundary)(props);\n  (0, _useOnProgressChange.useOnProgressChange)({\n    autoFillData: autoFillData,\n    loop: loop,\n    size: size,\n    offsetX: offsetX,\n    rawData: rawData,\n    onProgressChange: onProgressChange\n  });\n  var carouselController = (0, _useCarouselController.useCarouselController)({\n    loop: loop,\n    size: size,\n    data: data,\n    autoFillData: autoFillData,\n    handlerOffsetX: handlerOffsetX,\n    withAnimation: withAnimation,\n    defaultIndex: defaultIndex,\n    onScrollEnd: function onScrollEnd() {\n      return (0, _reactNativeReanimated.runOnJS)(_onScrollEnd)();\n    },\n    onScrollBegin: function onScrollBegin() {\n      return !!_onScrollBegin && (0, _reactNativeReanimated.runOnJS)(_onScrollBegin)();\n    },\n    duration: scrollAnimationDuration\n  });\n  var next = carouselController.next,\n      prev = carouselController.prev,\n      scrollTo = carouselController.scrollTo,\n      getSharedIndex = carouselController.getSharedIndex,\n      getCurrentIndex = carouselController.getCurrentIndex;\n\n  var _useAutoPlay = (0, _useAutoPlay2.useAutoPlay)({\n    autoPlay: autoPlay,\n    autoPlayInterval: autoPlayInterval,\n    autoPlayReverse: autoPlayReverse,\n    carouselController: carouselController\n  }),\n      startAutoPlay = _useAutoPlay.start,\n      pauseAutoPlay = _useAutoPlay.pause;\n\n  var _onScrollEnd = _react.default.useCallback(function () {\n    var _sharedIndex = Math.round(getSharedIndex());\n\n    var realIndex = (0, _computedWithAutoFillData.computedRealIndexWithAutoFillData)({\n      index: _sharedIndex,\n      dataLength: rawData.length,\n      loop: loop,\n      autoFillData: autoFillData\n    });\n\n    if (onSnapToItem) {\n      onSnapToItem(realIndex);\n    }\n\n    if (onScrollEnd) {\n      onScrollEnd(realIndex);\n    }\n  }, [loop, autoFillData, rawData.length, getSharedIndex, onSnapToItem, onScrollEnd]);\n\n  var scrollViewGestureOnScrollBegin = _react.default.useCallback(function () {\n    pauseAutoPlay();\n    _onScrollBegin == null ? void 0 : _onScrollBegin();\n  }, [_onScrollBegin, pauseAutoPlay]);\n\n  var scrollViewGestureOnScrollEnd = _react.default.useCallback(function () {\n    startAutoPlay();\n\n    _onScrollEnd();\n  }, [_onScrollEnd, startAutoPlay]);\n\n  var scrollViewGestureOnTouchBegin = _react.default.useCallback(pauseAutoPlay, [pauseAutoPlay]);\n\n  var scrollViewGestureOnTouchEnd = _react.default.useCallback(startAutoPlay, [startAutoPlay]);\n\n  _react.default.useImperativeHandle(ref, function () {\n    return {\n      next: next,\n      prev: prev,\n      getCurrentIndex: getCurrentIndex,\n      scrollTo: scrollTo\n    };\n  }, [getCurrentIndex, next, prev, scrollTo]);\n\n  var visibleRanges = (0, _useVisibleRanges.useVisibleRanges)({\n    total: data.length,\n    viewSize: size,\n    translation: handlerOffsetX,\n    windowSize: windowSize\n  });\n  var layoutConfig = (0, _useLayoutConfig.useLayoutConfig)(_objectSpread(_objectSpread({}, props), {}, {\n    size: size\n  }));\n\n  var renderLayout = _react.default.useCallback(function (item, i) {\n    var realIndex = (0, _computedWithAutoFillData.computedRealIndexWithAutoFillData)({\n      index: i,\n      dataLength: rawData.length,\n      loop: loop,\n      autoFillData: autoFillData\n    });\n    return _react.default.createElement(_BaseLayout.BaseLayout, {\n      key: i,\n      index: i,\n      handlerOffsetX: offsetX,\n      visibleRanges: visibleRanges,\n      animationStyle: customAnimation || layoutConfig,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, function (_ref) {\n      var animationValue = _ref.animationValue;\n      return renderItem({\n        item: item,\n        index: realIndex,\n        animationValue: animationValue\n      });\n    });\n  }, [loop, rawData, offsetX, visibleRanges, autoFillData, renderItem, layoutConfig, customAnimation]);\n\n  return _react.default.createElement(_store.CTX.Provider, {\n    value: {\n      props: props,\n      common: commonVariables\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [styles.container, {\n      width: width || '100%',\n      height: height || '100%'\n    }, style],\n    testID: testID,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_ScrollViewGesture.ScrollViewGesture, {\n    size: size,\n    translation: handlerOffsetX,\n    onScrollBegin: scrollViewGestureOnScrollBegin,\n    onScrollEnd: scrollViewGestureOnScrollEnd,\n    onTouchBegin: scrollViewGestureOnTouchBegin,\n    onTouchEnd: scrollViewGestureOnTouchEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNativeReanimated.default.View, {\n    key: mode,\n    style: [styles.container, {\n      width: width || '100%',\n      height: height || '100%'\n    }, style, vertical ? styles.itemsVertical : styles.itemsHorizontal],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, data.map(renderLayout)))));\n});\n\nvar _default = Carousel;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  itemsHorizontal: {\n    flexDirection: 'row'\n  },\n  itemsVertical: {\n    flexDirection: 'column'\n  }\n});","map":{"version":3,"mappings":"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","names":["Carousel","React","forwardRef","_props","ref","props","testID","data","rawData","loop","autoFillData","mode","style","width","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","withAnimation","renderItem","onScrollEnd","onSnapToItem","onScrollBegin","onProgressChange","customAnimation","defaultIndex","commonVariables","size","handlerOffsetX","dataLength","length","offsetX","totalSize","x","value","isNaN","_f","global","carouselController","_onScrollEnd","duration","next","prev","scrollTo","getSharedIndex","getCurrentIndex","startAutoPlay","start","pauseAutoPlay","pause","useCallback","_sharedIndex","Math","round","realIndex","index","scrollViewGestureOnScrollBegin","scrollViewGestureOnScrollEnd","scrollViewGestureOnTouchBegin","scrollViewGestureOnTouchEnd","useImperativeHandle","visibleRanges","total","viewSize","translation","layoutConfig","renderLayout","item","i","_react","_BaseLayout","key","animationStyle","__self","__source","fileName","lineNumber","columnNumber","animationValue","_store","Provider","common","_reactNative","styles","container","_ScrollViewGesture","onTouchBegin","onTouchEnd","_reactNativeReanimated","View","itemsVertical","itemsHorizontal","map","StyleSheet","create","overflow","flexDirection"],"sources":["Carousel.tsx"],"sourcesContent":["import React from 'react';\nimport Animated, { runOnJS, useDerivedValue } from 'react-native-reanimated';\n\nimport { useCarouselController } from './hooks/useCarouselController';\nimport { useAutoPlay } from './hooks/useAutoPlay';\nimport { usePropsErrorBoundary } from './hooks/usePropsErrorBoundary';\nimport { ScrollViewGesture } from './ScrollViewGesture';\nimport { useVisibleRanges } from './hooks/useVisibleRanges';\n\nimport type { ICarouselInstance, TCarouselProps } from './types';\nimport { StyleSheet, View } from 'react-native';\nimport { BaseLayout } from './layouts/BaseLayout';\nimport { useLayoutConfig } from './hooks/useLayoutConfig';\nimport { useInitProps } from './hooks/useInitProps';\nimport { CTX } from './store';\nimport { useCommonVariables } from './hooks/useCommonVariables';\nimport { useOnProgressChange } from './hooks/useOnProgressChange';\nimport { computedRealIndexWithAutoFillData } from './utils/computedWithAutoFillData';\n\nconst Carousel = React.forwardRef<ICarouselInstance, TCarouselProps<any>>(\n    (_props, ref) => {\n        const props = useInitProps(_props);\n\n        const {\n            testID,\n            data,\n            rawData,\n            loop,\n            autoFillData,\n            mode,\n            style,\n            width,\n            height,\n            vertical,\n            autoPlay,\n            windowSize,\n            autoPlayReverse,\n            autoPlayInterval,\n            scrollAnimationDuration,\n            withAnimation,\n            renderItem,\n            onScrollEnd,\n            onSnapToItem,\n            onScrollBegin,\n            onProgressChange,\n            customAnimation,\n            defaultIndex,\n        } = props;\n\n        const commonVariables = useCommonVariables(props);\n        const { size, handlerOffsetX } = commonVariables;\n        const dataLength = data.length;\n\n        const offsetX = useDerivedValue(() => {\n            const totalSize = size * dataLength;\n            const x = handlerOffsetX.value % totalSize;\n\n            if (!loop) {\n                return handlerOffsetX.value;\n            }\n            return isNaN(x) ? 0 : x;\n        }, [loop, size, dataLength]);\n\n        usePropsErrorBoundary(props);\n        useOnProgressChange({\n            autoFillData,\n            loop,\n            size,\n            offsetX,\n            rawData,\n            onProgressChange,\n        });\n\n        const carouselController = useCarouselController({\n            loop,\n            size,\n            data,\n            autoFillData,\n            handlerOffsetX,\n            withAnimation,\n            defaultIndex,\n            onScrollEnd: () => runOnJS(_onScrollEnd)(),\n            onScrollBegin: () => !!onScrollBegin && runOnJS(onScrollBegin)(),\n            duration: scrollAnimationDuration,\n        });\n\n        const { next, prev, scrollTo, getSharedIndex, getCurrentIndex } =\n            carouselController;\n\n        const { start: startAutoPlay, pause: pauseAutoPlay } = useAutoPlay({\n            autoPlay,\n            autoPlayInterval,\n            autoPlayReverse,\n            carouselController,\n        });\n\n        const _onScrollEnd = React.useCallback(() => {\n            const _sharedIndex = Math.round(getSharedIndex());\n\n            const realIndex = computedRealIndexWithAutoFillData({\n                index: _sharedIndex,\n                dataLength: rawData.length,\n                loop,\n                autoFillData,\n            });\n\n            if (onSnapToItem) {\n                onSnapToItem(realIndex);\n            }\n            if (onScrollEnd) {\n                onScrollEnd(realIndex);\n            }\n        }, [\n            loop,\n            autoFillData,\n            rawData.length,\n            getSharedIndex,\n            onSnapToItem,\n            onScrollEnd,\n        ]);\n\n        const scrollViewGestureOnScrollBegin = React.useCallback(() => {\n            pauseAutoPlay();\n            onScrollBegin?.();\n        }, [onScrollBegin, pauseAutoPlay]);\n\n        const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n            startAutoPlay();\n            _onScrollEnd();\n        }, [_onScrollEnd, startAutoPlay]);\n\n        const scrollViewGestureOnTouchBegin = React.useCallback(pauseAutoPlay, [\n            pauseAutoPlay,\n        ]);\n\n        const scrollViewGestureOnTouchEnd = React.useCallback(startAutoPlay, [\n            startAutoPlay,\n        ]);\n\n        React.useImperativeHandle(\n            ref,\n            () => ({\n                next,\n                prev,\n                getCurrentIndex,\n                scrollTo,\n            }),\n            [getCurrentIndex, next, prev, scrollTo]\n        );\n\n        const visibleRanges = useVisibleRanges({\n            total: data.length,\n            viewSize: size,\n            translation: handlerOffsetX,\n            windowSize,\n        });\n\n        const layoutConfig = useLayoutConfig({ ...props, size });\n\n        const renderLayout = React.useCallback(\n            (item: any, i: number) => {\n                const realIndex = computedRealIndexWithAutoFillData({\n                    index: i,\n                    dataLength: rawData.length,\n                    loop,\n                    autoFillData,\n                });\n\n                return (\n                    <BaseLayout\n                        key={i}\n                        index={i}\n                        handlerOffsetX={offsetX}\n                        visibleRanges={visibleRanges}\n                        animationStyle={customAnimation || layoutConfig}\n                    >\n                        {({ animationValue }) =>\n                            renderItem({\n                                item,\n                                index: realIndex,\n                                animationValue,\n                            })\n                        }\n                    </BaseLayout>\n                );\n            },\n            [\n                loop,\n                rawData,\n                offsetX,\n                visibleRanges,\n                autoFillData,\n                renderItem,\n                layoutConfig,\n                customAnimation,\n            ]\n        );\n\n        return (\n            <CTX.Provider value={{ props, common: commonVariables }}>\n                <View\n                    style={[\n                        styles.container,\n                        { width: width || '100%', height: height || '100%' },\n                        style,\n                    ]}\n                    testID={testID}\n                >\n                    <ScrollViewGesture\n                        size={size}\n                        translation={handlerOffsetX}\n                        onScrollBegin={scrollViewGestureOnScrollBegin}\n                        onScrollEnd={scrollViewGestureOnScrollEnd}\n                        onTouchBegin={scrollViewGestureOnTouchBegin}\n                        onTouchEnd={scrollViewGestureOnTouchEnd}\n                    >\n                        <Animated.View\n                            key={mode}\n                            style={[\n                                styles.container,\n                                {\n                                    width: width || '100%',\n                                    height: height || '100%',\n                                },\n                                style,\n                                vertical\n                                    ? styles.itemsVertical\n                                    : styles.itemsHorizontal,\n                            ]}\n                        >\n                            {data.map(renderLayout)}\n                        </Animated.View>\n                    </ScrollViewGesture>\n                </View>\n            </CTX.Provider>\n        );\n    }\n);\n\nexport default Carousel as <T extends any>(\n    props: React.PropsWithChildren<TCarouselProps<T>>\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: 'hidden',\n    },\n    itemsHorizontal: {\n        flexDirection: 'row',\n    },\n    itemsVertical: {\n        flexDirection: 'column',\n    },\n});\n"]},"metadata":{},"sourceType":"script"}