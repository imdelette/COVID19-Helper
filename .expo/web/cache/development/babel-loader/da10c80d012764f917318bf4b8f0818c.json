{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useState, useEffect, useReducer, useMemo, React } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as Font from 'expo-font';\nimport { AuthContext } from \"./src/components/context\";\nimport DrawerNavigator from \"./src/navigation/DrawerNavigator\";\nimport SignInScreen from \"./src/screens/SignInScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar fonts = function fonts() {\n  return Font.loadAsync({\n    'rs-bold': require(\"./src/assets/fonts/RobotoSlab/RobotoSlab-Bold.ttf\"),\n    'rs-light': require(\"./src/assets/fonts/RobotoSlab/RobotoSlab-Light.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      font = _useState2[0],\n      setFont = _useState2[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    username: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(previousState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          username: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          username: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          username: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _useReducer = useReducer(loginReducer, initialLoginState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      loginState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(username, password) {\n        var userToken;\n        userToken = null;\n\n        if (username == \"user\" && password == \"pass\") {\n          userToken = 'qwer';\n        }\n\n        console.log('user token: ', userToken);\n        dispatch({\n          type: 'LOGIN',\n          id: username,\n          token: userToken\n        });\n      },\n      signOut: function signOut() {\n        dispatch({\n          type: 'LOGOUT'\n        });\n      },\n      signUp: function signUp() {\n        setUserToken('asdf');\n        setIsLoading(false);\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      var userToken;\n      userToken = 'fgg';\n      console.log('user token: ', userToken);\n      dispatch({\n        type: 'RETRIEVE_TOKEN',\n        token: userToken\n      });\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n\n  if (font) {\n    return _jsx(AuthContext.Provider, {\n      value: authContext,\n      children: loginState.userToken != null ? _jsx(DrawerNavigator, {}) : _jsx(SignInScreen, {})\n    });\n  } else {\n    return _jsx(AppLoading, {\n      startAsync: fonts,\n      onFinish: function onFinish() {\n        return setFont(true);\n      },\n      onError: console.warn\n    });\n  }\n}","map":{"version":3,"names":["useState","useEffect","useReducer","useMemo","React","AppLoading","Font","AuthContext","DrawerNavigator","SignInScreen","fonts","loadAsync","require","App","font","setFont","initialLoginState","isLoading","username","userToken","loginReducer","previousState","action","type","token","id","loginState","dispatch","authContext","signIn","password","console","log","signOut","signUp","setUserToken","setIsLoading","setTimeout","flex","justifyContent","alignItems","warn"],"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/App.js"],"sourcesContent":["import { useState, useEffect, useReducer, useMemo, React, } from 'react';\n// import { AppLoading } from 'expo-splash-screen';\nimport AppLoading from 'expo-app-loading';\nimport { View, ActivityIndicator } from \"react-native\";\nimport  * as Font from 'expo-font';\n\nimport { AuthContext } from './src/components/context';\nimport DrawerNavigator from './src/navigation/DrawerNavigator';\nimport SignInScreen from './src/screens/SignInScreen';\n\nconst fonts = () => Font.loadAsync({\n    'rs-bold': require('./src/assets/fonts/RobotoSlab/RobotoSlab-Bold.ttf'),\n    'rs-light': require('./src/assets/fonts/RobotoSlab/RobotoSlab-Light.ttf')\n})\n\nexport default function App() {\n  const [font, setFont] = useState(false);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [userToken, setUserToken] = useState(null);\n\n  const initialLoginState = {\n    isLoading: true,\n    username: null,\n    userToken: null,\n  };\n\n  const loginReducer = (previousState, action) => {\n    switch(action.type) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...previousState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN':\n        return {\n          ...previousState,\n          username: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT':\n        return {\n          ...previousState,\n          username: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER':\n        return {\n          ...previousState,\n          username: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = useReducer(loginReducer, initialLoginState);\n\n  const authContext = useMemo(() => ({\n    signIn: (username, password) => {\n      // setUserToken('asdf');\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      if(username == \"user\" && password == \"pass\") {\n        userToken = 'qwer';\n      }\n      console.log('user token: ', userToken);\n      dispatch({ type: 'LOGIN', id: username, token: userToken });\n    },\n    signOut: () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      setUserToken('asdf');\n      setIsLoading(false);\n    }\n  }));\n\n  useEffect(() => {\n    setTimeout(() => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = 'fgg'\n      console.log('user token: ', userToken);\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken });\n    }, 1000);\n  }, []);\n  \n  if (loginState.isLoading) {\n    return(\n      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center',}}>\n        <ActivityIndicator size=\"large\"/>\n      </View>\n    )\n  }\n\n  if(font) {\n    return (\n      <AuthContext.Provider value={authContext}>\n        { loginState.userToken != null ? (\n          <DrawerNavigator />\n        )\n        :\n          <SignInScreen />\n        }\n      </AuthContext.Provider>\n    );\n  } else {\n    return (\n      <AppLoading startAsync={fonts} \n        onFinish={() => setFont(true)}\n        onError={console.warn} />\n    );\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}