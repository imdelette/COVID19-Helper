{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCarouselController = useCarouselController;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _constants = require(\"../constants\");\n\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\n\nvar _dealWithAnimation = require(\"../utils/dealWithAnimation\");\n\nvar _computedWithAutoFillData = require(\"../utils/computedWithAutoFillData\");\n\nvar _log = require(\"../utils/log\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useCarouselController(options) {\n  var size = options.size,\n      data = options.data,\n      loop = options.loop,\n      handlerOffsetX = options.handlerOffsetX,\n      withAnimation = options.withAnimation,\n      _options$defaultIndex = options.defaultIndex,\n      defaultIndex = _options$defaultIndex === void 0 ? 0 : _options$defaultIndex,\n      duration = options.duration,\n      autoFillData = options.autoFillData;\n\n  var dataInfo = _react.default.useMemo(function () {\n    return {\n      length: data.length,\n      disable: !data.length,\n      originalLength: data.length\n    };\n  }, [data]);\n\n  var index = (0, _reactNativeReanimated.useSharedValue)(defaultIndex);\n  var sharedIndex = (0, _react.useRef)(defaultIndex);\n  var sharedPreIndex = (0, _react.useRef)(defaultIndex);\n\n  var currentFixedPage = _react.default.useCallback(function () {\n    if (loop) {\n      return -Math.round(handlerOffsetX.value / size);\n    }\n\n    var fixed = handlerOffsetX.value / size % dataInfo.length;\n    return Math.round(handlerOffsetX.value <= 0 ? Math.abs(fixed) : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0));\n  }, [handlerOffsetX, dataInfo, size, loop]);\n\n  function setSharedIndex(newSharedIndex) {\n    sharedIndex.current = newSharedIndex;\n  }\n\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      var handlerOffsetXValue = handlerOffsetX.value;\n      var toInt = (0, _log.round)(handlerOffsetXValue / size) % dataInfo.length;\n      var isPositive = handlerOffsetXValue <= 0;\n      var i = isPositive ? Math.abs(toInt) : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n      var newSharedIndexValue = (0, _computedWithAutoFillData.convertToSharedIndex)({\n        loop: loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData,\n        index: i\n      });\n      return {\n        i: i,\n        newSharedIndexValue: newSharedIndexValue\n      };\n    };\n\n    _f._closure = {\n      handlerOffsetX: handlerOffsetX,\n      round: _log.round,\n      size: size,\n      dataInfo: dataInfo,\n      convertToSharedIndex: _computedWithAutoFillData.convertToSharedIndex,\n      loop: loop,\n      autoFillData: autoFillData\n    };\n    _f.asString = \"function _f(){const{handlerOffsetX,round,size,dataInfo,convertToSharedIndex,loop,autoFillData}=jsThis._closure;{const handlerOffsetXValue=handlerOffsetX.value;const toInt=round(handlerOffsetXValue/size)%dataInfo.length;const isPositive=handlerOffsetXValue<=0;const i=isPositive?Math.abs(toInt):Math.abs(toInt>0?dataInfo.length-toInt:0);const newSharedIndexValue=convertToSharedIndex({loop:loop,rawDataLength:dataInfo.originalLength,autoFillData:autoFillData,index:i});return{i:i,newSharedIndexValue:newSharedIndexValue};}}\";\n    _f.__workletHash = 14011541648783;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (83:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    var _f = function _f(_ref) {\n      var i = _ref.i,\n          newSharedIndexValue = _ref.newSharedIndexValue;\n      index.value = i;\n      (0, _reactNativeReanimated.runOnJS)(setSharedIndex)(newSharedIndexValue);\n    };\n\n    _f._closure = {\n      index: index,\n      runOnJS: _reactNativeReanimated.runOnJS,\n      setSharedIndex: setSharedIndex\n    };\n    _f.asString = \"function _f({i:i,newSharedIndexValue:newSharedIndexValue}){const{index,runOnJS,setSharedIndex}=jsThis._closure;{index.value=i;runOnJS(setSharedIndex)(newSharedIndexValue);}}\";\n    _f.__workletHash = 16638491076412;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (103:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [sharedPreIndex, sharedIndex, size, dataInfo, index, loop, autoFillData, handlerOffsetX]);\n\n  var getCurrentIndex = _react.default.useCallback(function () {\n    return index.value;\n  }, [index]);\n\n  var canSliding = _react.default.useCallback(function () {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n\n  var onScrollEnd = _react.default.useCallback(function () {\n    options.onScrollEnd == null ? void 0 : options.onScrollEnd();\n  }, [options]);\n\n  var onScrollBegin = _react.default.useCallback(function () {\n    options.onScrollBegin == null ? void 0 : options.onScrollBegin();\n  }, [options]);\n\n  var scrollWithTiming = _react.default.useCallback(function () {\n    var _f = function _f(toValue, onFinished) {\n      var callback = function () {\n        var _f = function _f(isFinished) {\n          if (isFinished) {\n            (0, _reactNativeReanimated.runOnJS)(onScrollEnd)();\n            onFinished && (0, _reactNativeReanimated.runOnJS)(onFinished)();\n          }\n        };\n\n        _f._closure = {\n          runOnJS: _reactNativeReanimated.runOnJS,\n          onScrollEnd: onScrollEnd,\n          onFinished: onFinished\n        };\n        _f.asString = \"function _f(isFinished){const{runOnJS,onScrollEnd,onFinished}=jsThis._closure;{if(isFinished){runOnJS(onScrollEnd)();onFinished&&runOnJS(onFinished)();}}}\";\n        _f.__workletHash = 7767198641261;\n        _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (138:29)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }();\n\n      var defaultWithAnimation = {\n        type: 'timing',\n        config: {\n          duration: duration,\n          easing: _constants.Easing.easeOutQuart\n        }\n      };\n      return (0, _dealWithAnimation.dealWithAnimation)(withAnimation != null ? withAnimation : defaultWithAnimation)(toValue, callback);\n    };\n\n    _f._closure = {\n      runOnJS: _reactNativeReanimated.runOnJS,\n      onScrollEnd: onScrollEnd,\n      duration: duration,\n      Easing: {\n        easeOutQuart: _constants.Easing.easeOutQuart\n      },\n      dealWithAnimation: _dealWithAnimation.dealWithAnimation,\n      withAnimation: withAnimation\n    };\n    _f.asString = \"function _f(toValue,onFinished){const{runOnJS,onScrollEnd,duration,Easing,dealWithAnimation,withAnimation}=jsThis._closure;{var _withAnimation;const callback=function(isFinished){'worklet';if(isFinished){runOnJS(onScrollEnd)();onFinished&&runOnJS(onFinished)();}};const defaultWithAnimation={type:'timing',config:{duration:duration,easing:Easing.easeOutQuart}};return dealWithAnimation((_withAnimation=withAnimation)!==null&&_withAnimation!==void 0?_withAnimation:defaultWithAnimation)(toValue,callback);}}\";\n    _f.__workletHash = 15006680124176;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (136:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [duration, withAnimation, onScrollEnd]);\n\n  var next = _react.default.useCallback(function () {\n    var _f = function _f() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _opts$count = opts.count,\n          count = _opts$count === void 0 ? 1 : _opts$count,\n          _opts$animated = opts.animated,\n          animated = _opts$animated === void 0 ? true : _opts$animated,\n          onFinished = opts.onFinished;\n      if (!canSliding() || !loop && index.value >= dataInfo.length - 1) return;\n      onScrollBegin == null ? void 0 : onScrollBegin();\n      var nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n\n      if (animated) {\n        handlerOffsetX.value = scrollWithTiming(-nextPage * size, onFinished);\n      } else {\n        handlerOffsetX.value = -nextPage * size;\n        onFinished == null ? void 0 : onFinished();\n      }\n    };\n\n    _f._closure = {\n      canSliding: canSliding,\n      loop: loop,\n      index: index,\n      dataInfo: dataInfo,\n      onScrollBegin: onScrollBegin,\n      currentFixedPage: currentFixedPage,\n      handlerOffsetX: handlerOffsetX,\n      scrollWithTiming: scrollWithTiming,\n      size: size\n    };\n    _f.asString = \"function _f(opts={}){const{canSliding,loop,index,dataInfo,onScrollBegin,currentFixedPage,handlerOffsetX,scrollWithTiming,size}=jsThis._closure;{var _onScrollBegin;const{count=1,animated=true,onFinished:onFinished}=opts;if(!canSliding()||!loop&&index.value>=dataInfo.length-1)return;(_onScrollBegin=onScrollBegin)===null||_onScrollBegin===void 0?void 0:_onScrollBegin();const nextPage=currentFixedPage()+count;index.value=nextPage;if(animated){handlerOffsetX.value=scrollWithTiming(-nextPage*size,onFinished);}else{handlerOffsetX.value=-nextPage*size;onFinished===null||onFinished===void 0?void 0:onFinished();}}}\";\n    _f.__workletHash = 1734401141936;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (160:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [canSliding, loop, index, dataInfo, onScrollBegin, handlerOffsetX, size, scrollWithTiming, currentFixedPage]);\n\n  var prev = _react.default.useCallback(function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _opts$count2 = opts.count,\n        count = _opts$count2 === void 0 ? 1 : _opts$count2,\n        _opts$animated2 = opts.animated,\n        animated = _opts$animated2 === void 0 ? true : _opts$animated2,\n        onFinished = opts.onFinished;\n    if (!canSliding() || !loop && index.value <= 0) return;\n    onScrollBegin == null ? void 0 : onScrollBegin();\n    var prevPage = currentFixedPage() - count;\n    index.value = prevPage;\n\n    if (animated) {\n      handlerOffsetX.value = scrollWithTiming(-prevPage * size, onFinished);\n    } else {\n      handlerOffsetX.value = -prevPage * size;\n      onFinished == null ? void 0 : onFinished();\n    }\n  }, [canSliding, loop, index, onScrollBegin, handlerOffsetX, size, scrollWithTiming, currentFixedPage]);\n\n  var to = _react.default.useCallback(function (opts) {\n    var i = opts.i,\n        _opts$animated3 = opts.animated,\n        animated = _opts$animated3 === void 0 ? false : _opts$animated3,\n        onFinished = opts.onFinished;\n    if (i === index.value) return;\n    if (!canSliding()) return;\n    onScrollBegin == null ? void 0 : onScrollBegin();\n    var offset = handlerOffsetX.value + (index.value - i) * size;\n\n    if (animated) {\n      index.value = i;\n      handlerOffsetX.value = scrollWithTiming(offset, onFinished);\n    } else {\n      handlerOffsetX.value = offset;\n      index.value = i;\n      onFinished == null ? void 0 : onFinished();\n    }\n  }, [index, canSliding, onScrollBegin, handlerOffsetX, size, scrollWithTiming]);\n\n  var scrollTo = _react.default.useCallback(function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var i = opts.index,\n        count = opts.count,\n        _opts$animated4 = opts.animated,\n        animated = _opts$animated4 === void 0 ? false : _opts$animated4,\n        onFinished = opts.onFinished;\n\n    if (typeof i === 'number' && i > -1) {\n      to({\n        i: i,\n        animated: animated,\n        onFinished: onFinished\n      });\n      return;\n    }\n\n    if (!count) {\n      return;\n    }\n\n    var n = Math.round(count);\n\n    if (n < 0) {\n      prev({\n        count: Math.abs(n),\n        animated: animated,\n        onFinished: onFinished\n      });\n    } else {\n      next({\n        count: n,\n        animated: animated,\n        onFinished: onFinished\n      });\n    }\n  }, [prev, next, to]);\n\n  return {\n    next: next,\n    prev: prev,\n    scrollTo: scrollTo,\n    getCurrentIndex: getCurrentIndex,\n    getSharedIndex: function getSharedIndex() {\n      return sharedIndex.current;\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["useCarouselController","options","size","data","loop","handlerOffsetX","withAnimation","defaultIndex","duration","autoFillData","dataInfo","React","useMemo","length","disable","originalLength","index","sharedIndex","sharedPreIndex","currentFixedPage","useCallback","Math","round","value","fixed","abs","setSharedIndex","newSharedIndex","current","handlerOffsetXValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","_f","convertToSharedIndex","global","runOnJS","getCurrentIndex","canSliding","onScrollEnd","onScrollBegin","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","Easing","easeOutQuart","dealWithAnimation","next","opts","count","animated","nextPage","prev","prevPage","to","offset","scrollTo","n","getSharedIndex"],"sources":["useCarouselController.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { Easing } from '../constants';\nimport {\n    runOnJS,\n    useAnimatedReaction,\n    useSharedValue,\n} from 'react-native-reanimated';\nimport type {\n    TCarouselActionOptions,\n    TCarouselProps,\n    WithTimingAnimation,\n} from '../types';\nimport { dealWithAnimation } from '@/utils/dealWithAnimation';\nimport { convertToSharedIndex } from '@/utils/computedWithAutoFillData';\nimport { round } from '@/utils/log';\n\ninterface IOpts {\n    loop: boolean;\n    size: number;\n    data: TCarouselProps['data'];\n    autoFillData: TCarouselProps['autoFillData'];\n    handlerOffsetX: Animated.SharedValue<number>;\n    withAnimation?: TCarouselProps['withAnimation'];\n    duration?: number;\n    defaultIndex?: number;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n}\n\nexport interface ICarouselController {\n    getSharedIndex: () => number;\n    prev: (opts?: TCarouselActionOptions) => void;\n    next: (opts?: TCarouselActionOptions) => void;\n    getCurrentIndex: () => number;\n    scrollTo: (opts?: TCarouselActionOptions) => void;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n    const {\n        size,\n        data,\n        loop,\n        handlerOffsetX,\n        withAnimation,\n        defaultIndex = 0,\n        duration,\n        autoFillData,\n    } = options;\n\n    const dataInfo = React.useMemo(\n        () => ({\n            length: data.length,\n            disable: !data.length,\n            originalLength: data.length,\n        }),\n        [data]\n    );\n\n    const index = useSharedValue<number>(defaultIndex);\n    // The Index displayed to the user\n    const sharedIndex = useRef<number>(defaultIndex);\n    const sharedPreIndex = useRef<number>(defaultIndex);\n\n    const currentFixedPage = React.useCallback(() => {\n        if (loop) {\n            return -Math.round(handlerOffsetX.value / size);\n        }\n\n        const fixed = (handlerOffsetX.value / size) % dataInfo.length;\n        return Math.round(\n            handlerOffsetX.value <= 0\n                ? Math.abs(fixed)\n                : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0)\n        );\n    }, [handlerOffsetX, dataInfo, size, loop]);\n\n    function setSharedIndex(newSharedIndex: number) {\n        sharedIndex.current = newSharedIndex;\n    }\n\n    useAnimatedReaction(\n        () => {\n            const handlerOffsetXValue = handlerOffsetX.value;\n            const toInt = round(handlerOffsetXValue / size) % dataInfo.length;\n            const isPositive = handlerOffsetXValue <= 0;\n            const i = isPositive\n                ? Math.abs(toInt)\n                : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n            const newSharedIndexValue = convertToSharedIndex({\n                loop,\n                rawDataLength: dataInfo.originalLength,\n                autoFillData: autoFillData!,\n                index: i,\n            });\n\n            return {\n                i,\n                newSharedIndexValue,\n            };\n        },\n        ({ i, newSharedIndexValue }) => {\n            index.value = i;\n            runOnJS(setSharedIndex)(newSharedIndexValue);\n        },\n        [\n            sharedPreIndex,\n            sharedIndex,\n            size,\n            dataInfo,\n            index,\n            loop,\n            autoFillData,\n            handlerOffsetX,\n        ]\n    );\n\n    const getCurrentIndex = React.useCallback(() => {\n        return index.value;\n    }, [index]);\n\n    const canSliding = React.useCallback(() => {\n        return !dataInfo.disable;\n    }, [dataInfo]);\n\n    const onScrollEnd = React.useCallback(() => {\n        options.onScrollEnd?.();\n    }, [options]);\n\n    const onScrollBegin = React.useCallback(() => {\n        options.onScrollBegin?.();\n    }, [options]);\n\n    const scrollWithTiming = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            'worklet';\n            const callback = (isFinished: boolean) => {\n                'worklet';\n                if (isFinished) {\n                    runOnJS(onScrollEnd)();\n                    onFinished && runOnJS(onFinished)();\n                }\n            };\n\n            const defaultWithAnimation: WithTimingAnimation = {\n                type: 'timing',\n                config: { duration, easing: Easing.easeOutQuart },\n            };\n\n            return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n                toValue,\n                callback\n            );\n        },\n        [duration, withAnimation, onScrollEnd]\n    );\n\n    const next = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            'worklet';\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value >= dataInfo.length - 1))\n                return;\n\n            onScrollBegin?.();\n\n            const nextPage = currentFixedPage() + count;\n            index.value = nextPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -nextPage * size,\n                    onFinished\n                ) as any;\n            } else {\n                handlerOffsetX.value = -nextPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            dataInfo,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const prev = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value <= 0)) return;\n\n            onScrollBegin?.();\n\n            const prevPage = currentFixedPage() - count;\n            index.value = prevPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -prevPage * size,\n                    onFinished\n                );\n            } else {\n                handlerOffsetX.value = -prevPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const to = React.useCallback(\n        (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n            const { i, animated = false, onFinished } = opts;\n            if (i === index.value) return;\n            if (!canSliding()) return;\n\n            onScrollBegin?.();\n\n            const offset = handlerOffsetX.value + (index.value - i) * size;\n\n            if (animated) {\n                index.value = i;\n                handlerOffsetX.value = scrollWithTiming(offset, onFinished);\n            } else {\n                handlerOffsetX.value = offset;\n                index.value = i;\n                onFinished?.();\n            }\n        },\n        [\n            index,\n            canSliding,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n        ]\n    );\n\n    const scrollTo = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { index: i, count, animated = false, onFinished } = opts;\n\n            if (typeof i === 'number' && i > -1) {\n                to({ i, animated, onFinished });\n                return;\n            }\n\n            if (!count) {\n                return;\n            }\n\n            const n = Math.round(count);\n\n            if (n < 0) {\n                prev({ count: Math.abs(n), animated, onFinished });\n            } else {\n                next({ count: n, animated, onFinished });\n            }\n        },\n        [prev, next, to]\n    );\n\n    return {\n        next,\n        prev,\n        scrollTo,\n        getCurrentIndex,\n        getSharedIndex: () => sharedIndex.current,\n    };\n}\n"]},"metadata":{},"sourceType":"script"}