{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computedFillDataWithAutoFillData = computedFillDataWithAutoFillData;\nexports.computedOffsetXValueWithAutoFillData = void 0;\nexports.computedRealIndexWithAutoFillData = computedRealIndexWithAutoFillData;\nexports.convertToSharedIndex = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar SINGLE_ITEM = _constants.DATA_LENGTH.SINGLE_ITEM,\n    DOUBLE_ITEM = _constants.DATA_LENGTH.DOUBLE_ITEM;\n\nvar isAutoFillData = function () {\n  var _f = function _f(params) {\n    return !!params.loop && !!params.autoFillData;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function isAutoFillData(params){return!!params.loop&&!!params.autoFillData;}\";\n  _f.__workletHash = 12581181073993;\n  _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/utils/computedWithAutoFillData.ts (5:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar convertToSharedIndex = function () {\n  var _f = function _f(params) {\n    var loop = params.loop,\n        rawDataLength = params.rawDataLength,\n        index = params.index,\n        autoFillData = params.autoFillData;\n\n    if (isAutoFillData({\n      loop: loop,\n      autoFillData: autoFillData\n    })) {\n      switch (rawDataLength) {\n        case SINGLE_ITEM:\n          return 0;\n\n        case DOUBLE_ITEM:\n          return index % 2;\n      }\n    }\n\n    return index;\n  };\n\n  _f._closure = {\n    isAutoFillData: isAutoFillData,\n    SINGLE_ITEM: SINGLE_ITEM,\n    DOUBLE_ITEM: DOUBLE_ITEM\n  };\n  _f.asString = \"function convertToSharedIndex(params){const{isAutoFillData,SINGLE_ITEM,DOUBLE_ITEM}=jsThis._closure;{const{loop:loop,rawDataLength:rawDataLength,index:index,autoFillData:autoFillData}=params;if(isAutoFillData({loop:loop,autoFillData:autoFillData})){switch(rawDataLength){case SINGLE_ITEM:return 0;case DOUBLE_ITEM:return index%2;}}return index;}}\";\n  _f.__workletHash = 15638699687620;\n  _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/utils/computedWithAutoFillData.ts (15:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.convertToSharedIndex = convertToSharedIndex;\n\nvar computedOffsetXValueWithAutoFillData = function () {\n  var _f = function _f(params) {\n    var rawDataLength = params.rawDataLength,\n        value = params.value,\n        size = params.size,\n        loop = params.loop,\n        autoFillData = params.autoFillData;\n\n    if (isAutoFillData({\n      loop: loop,\n      autoFillData: autoFillData\n    })) {\n      switch (rawDataLength) {\n        case SINGLE_ITEM:\n          return value % size;\n\n        case DOUBLE_ITEM:\n          return value % (size * 2);\n      }\n    }\n\n    return value;\n  };\n\n  _f._closure = {\n    isAutoFillData: isAutoFillData,\n    SINGLE_ITEM: SINGLE_ITEM,\n    DOUBLE_ITEM: DOUBLE_ITEM\n  };\n  _f.asString = \"function computedOffsetXValueWithAutoFillData(params){const{isAutoFillData,SINGLE_ITEM,DOUBLE_ITEM}=jsThis._closure;{const{rawDataLength:rawDataLength,value:value,size:size,loop:loop,autoFillData:autoFillData}=params;if(isAutoFillData({loop:loop,autoFillData:autoFillData})){switch(rawDataLength){case SINGLE_ITEM:return value%size;case DOUBLE_ITEM:return value%(size*2);}}return value;}}\";\n  _f.__workletHash = 8949924672961;\n  _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/utils/computedWithAutoFillData.ts (33:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.computedOffsetXValueWithAutoFillData = computedOffsetXValueWithAutoFillData;\n\nfunction computedRealIndexWithAutoFillData(params) {\n  var index = params.index,\n      dataLength = params.dataLength,\n      loop = params.loop,\n      autoFillData = params.autoFillData;\n\n  if (isAutoFillData({\n    loop: loop,\n    autoFillData: autoFillData\n  })) {\n    switch (dataLength) {\n      case SINGLE_ITEM:\n        return index % 1;\n\n      case DOUBLE_ITEM:\n        return index % 2;\n    }\n  }\n\n  return index;\n}\n\nfunction computedFillDataWithAutoFillData(params) {\n  var data = params.data,\n      loop = params.loop,\n      autoFillData = params.autoFillData,\n      dataLength = params.dataLength;\n\n  if (isAutoFillData({\n    loop: loop,\n    autoFillData: autoFillData\n  })) {\n    switch (dataLength) {\n      case SINGLE_ITEM:\n        return [data[0], data[0], data[0]];\n\n      case DOUBLE_ITEM:\n        return [data[0], data[1], data[0], data[1]];\n    }\n  }\n\n  return data;\n}","map":{"version":3,"mappings":"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","names":["SINGLE_ITEM","DATA_LENGTH","DOUBLE_ITEM","isAutoFillData","params","loop","autoFillData","convertToSharedIndex","rawDataLength","index","computedOffsetXValueWithAutoFillData","value","size","computedRealIndexWithAutoFillData","dataLength","computedFillDataWithAutoFillData","data"],"sources":["computedWithAutoFillData.ts"],"sourcesContent":["import { DATA_LENGTH } from 'src/constants';\n\nconst { SINGLE_ITEM, DOUBLE_ITEM } = DATA_LENGTH;\n\nfunction isAutoFillData(params: { autoFillData: boolean; loop: boolean }) {\n    'worklet';\n    return !!params.loop && !!params.autoFillData;\n}\n\ntype BaseParams<T extends object = {}> = {\n    autoFillData: boolean;\n    loop: boolean;\n} & T;\n\nexport function convertToSharedIndex(\n    params: BaseParams<{ index: number; rawDataLength: number }>\n) {\n    'worklet';\n    const { loop, rawDataLength, index, autoFillData } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (rawDataLength) {\n            case SINGLE_ITEM:\n                return 0;\n            case DOUBLE_ITEM:\n                return index % 2;\n        }\n    }\n\n    return index;\n}\n\nexport function computedOffsetXValueWithAutoFillData(\n    params: BaseParams<{\n        rawDataLength: number;\n        value: number;\n        size: number;\n    }>\n) {\n    'worklet';\n\n    const { rawDataLength, value, size, loop, autoFillData } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (rawDataLength) {\n            case SINGLE_ITEM:\n                return value % size;\n            case DOUBLE_ITEM:\n                return value % (size * 2);\n        }\n    }\n\n    return value;\n}\n\nexport function computedRealIndexWithAutoFillData(\n    params: BaseParams<{\n        index: number;\n        dataLength: number;\n    }>\n) {\n    const { index, dataLength, loop, autoFillData } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (dataLength) {\n            case SINGLE_ITEM:\n                return index % 1;\n            case DOUBLE_ITEM:\n                return index % 2;\n        }\n    }\n\n    return index;\n}\n\nexport function computedFillDataWithAutoFillData<T>(\n    params: BaseParams<{\n        data: T[];\n        dataLength: number;\n    }>\n): T[] {\n    const { data, loop, autoFillData, dataLength } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (dataLength) {\n            case SINGLE_ITEM:\n                return [data[0], data[0], data[0]];\n            case DOUBLE_ITEM:\n                return [data[0], data[1], data[0], data[1]];\n        }\n    }\n\n    return data;\n}\n"]},"metadata":{},"sourceType":"script"}