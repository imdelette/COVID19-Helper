{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, React, BackHandler, Alert } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport DrawerNavigator from \"./src/navigation/DrawerNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar fonts = function fonts() {\n  return Font.loadAsync({\n    'rs-bold': require(\"./src/assets/fonts/RobotoSlab/RobotoSlab-Bold.ttf\"),\n    'rs-light': require(\"./src/assets/fonts/RobotoSlab/RobotoSlab-Light.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      font = _useState2[0],\n      setFont = _useState2[1];\n\n  useEffect(function () {\n    var backAction = function backAction() {\n      Alert.alert(\"Hold on!\", \"Are you sure you want to go back?\", [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return null;\n        },\n        style: \"cancel\"\n      }, {\n        text: \"YES\",\n        onPress: function onPress() {\n          return BackHandler.exitApp();\n        }\n      }]);\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      return backHandler.remove();\n    };\n  }, []);\n\n  if (font) {\n    return _jsx(DrawerNavigator, {});\n  } else {\n    return _jsx(AppLoading, {\n      startAsync: fonts,\n      onFinish: function onFinish() {\n        return setFont(true);\n      },\n      onError: console.warn\n    });\n  }\n}","map":{"version":3,"names":["useState","useEffect","React","BackHandler","Alert","AppLoading","Font","DrawerNavigator","fonts","loadAsync","require","App","font","setFont","backAction","alert","text","onPress","style","exitApp","backHandler","addEventListener","remove","console","warn"],"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/App.js"],"sourcesContent":["import { useState, useEffect, React, BackHandler, Alert } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport  * as Font from 'expo-font';\n\nimport DrawerNavigator from './src/navigation/DrawerNavigator';\n\nconst fonts = () => Font.loadAsync({\n    'rs-bold': require('./src/assets/fonts/RobotoSlab/RobotoSlab-Bold.ttf'),\n    'rs-light': require('./src/assets/fonts/RobotoSlab/RobotoSlab-Light.ttf')\n})\n\nexport default function App() {\n  const [font, setFont] = useState(false);\n\n  useEffect(() => {\n    const backAction = () => {\n      Alert.alert(\"Hold on!\", \"Are you sure you want to go back?\", [\n        {\n          text: \"Cancel\",\n          onPress: () => null,\n          style: \"cancel\"\n        },\n        { text: \"YES\", onPress: () => BackHandler.exitApp() }\n      ]);\n      return true;\n    };\n\n    const backHandler = BackHandler.addEventListener(\n      \"hardwareBackPress\",\n      backAction,\n    );\n\n    return () => backHandler.remove();\n  }, []);\n\n  if(font) {\n    return (\n      <DrawerNavigator />\n    \n    );\n  } else {\n    return (\n      <AppLoading startAsync={fonts} \n        onFinish={() => setFont(true)}\n        onError={console.warn} />\n    );\n  }\n}"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,WAArC,EAAkDC,KAAlD,QAA+D,OAA/D;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAQ,KAAKC,IAAb,MAAuB,WAAvB;AAEA,OAAOC,eAAP;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;EAAA,OAAMF,IAAI,CAACG,SAAL,CAAe;IAC/B,WAAWC,OAAO,qDADa;IAE/B,YAAYA,OAAO;EAFY,CAAf,CAAN;AAAA,CAAd;;AAKA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAwBX,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOY,IAAP;EAAA,IAAaC,OAAb;;EAEAZ,SAAS,CAAC,YAAM;IACd,IAAMa,UAAU,GAAG,SAAbA,UAAa,GAAM;MACvBV,KAAK,CAACW,KAAN,CAAY,UAAZ,EAAwB,mCAAxB,EAA6D,CAC3D;QACEC,IAAI,EAAE,QADR;QAEEC,OAAO,EAAE;UAAA,OAAM,IAAN;QAAA,CAFX;QAGEC,KAAK,EAAE;MAHT,CAD2D,EAM3D;QAAEF,IAAI,EAAE,KAAR;QAAeC,OAAO,EAAE;UAAA,OAAMd,WAAW,CAACgB,OAAZ,EAAN;QAAA;MAAxB,CAN2D,CAA7D;MAQA,OAAO,IAAP;IACD,CAVD;;IAYA,IAAMC,WAAW,GAAGjB,WAAW,CAACkB,gBAAZ,CAClB,mBADkB,EAElBP,UAFkB,CAApB;IAKA,OAAO;MAAA,OAAMM,WAAW,CAACE,MAAZ,EAAN;IAAA,CAAP;EACD,CAnBQ,EAmBN,EAnBM,CAAT;;EAqBA,IAAGV,IAAH,EAAS;IACP,OACE,KAAC,eAAD,KADF;EAID,CALD,MAKO;IACL,OACE,KAAC,UAAD;MAAY,UAAU,EAAEJ,KAAxB;MACE,QAAQ,EAAE;QAAA,OAAMK,OAAO,CAAC,IAAD,CAAb;MAAA,CADZ;MAEE,OAAO,EAAEU,OAAO,CAACC;IAFnB,EADF;EAKD;AACF"},"metadata":{},"sourceType":"module"}