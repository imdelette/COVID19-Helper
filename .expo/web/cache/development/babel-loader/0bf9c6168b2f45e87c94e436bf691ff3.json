{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useState, useEffect, useReducer, useCallback, useMemo, React } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\nimport { AuthContext } from \"./src/components/context\";\nimport DrawerNavigator from \"./src/navigation/DrawerNavigator\";\nimport SignInScreen from \"./src/screens/SignInScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar fontsLoading = function fontsLoading() {\n  return Font.loadAsync({\n    'ms-bold': require(\"./src/assets/fonts/Montserrat/Montserrat-Bold.ttf\"),\n    'ms-regular': require(\"./src/assets/fonts/Montserrat/Montserrat-Regular.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToken = _useState2[0],\n      setUserToken = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appIsReady = _useState4[0],\n      setAppIsReady = _useState4[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    username: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(previousState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          username: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          username: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, previousState), {}, {\n          username: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _useReducer = useReducer(loginReducer, initialLoginState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      loginState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(username, password) {\n        var userToken;\n        userToken = null;\n        console.log('username: ', username);\n        console.log('password: ', password);\n        userToken = 'qwer';\n        dispatch({\n          type: 'LOGIN',\n          id: username,\n          token: userToken\n        });\n      },\n      signOut: function signOut() {\n        dispatch({\n          type: 'LOGOUT'\n        });\n      },\n      signUp: function signUp() {\n        setUserToken('asdf');\n        setIsLoading(false);\n      }\n    };\n  });\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: loginState.userToken != null ? _jsx(DrawerNavigator, {}) : _jsx(SignInScreen, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignContent: 'center',\n    justifyContent: 'center'\n  },\n  ellipse: {},\n  text: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["useState","useEffect","useReducer","useCallback","useMemo","React","Font","SplashScreen","LinearGradient","getStatusBarHeight","AuthContext","DrawerNavigator","SignInScreen","fontsLoading","loadAsync","require","App","useWindowDimensions","width","height","userToken","setUserToken","appIsReady","setAppIsReady","initialLoginState","isLoading","username","loginReducer","previousState","action","type","token","id","loginState","dispatch","authContext","signIn","password","console","log","signOut","signUp","setIsLoading","styles","StyleSheet","create","container","alignContent","justifyContent","ellipse","text","fontSize","textAlign"],"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/App.js"],"sourcesContent":["import { useState, useEffect, useReducer, useCallback, useMemo, React, } from 'react';\nimport { View, ActivityIndicator, BackHandler, Text, StyleSheet, useWindowDimensions } from \"react-native\";\nimport  * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\n\n\nimport { AuthContext } from './src/components/context';\nimport DrawerNavigator from './src/navigation/DrawerNavigator';\nimport SignInScreen from './src/screens/SignInScreen';\n\nconst fontsLoading = () => Font.loadAsync({\n    'ms-bold': require('./src/assets/fonts/Montserrat/Montserrat-Bold.ttf'),\n    'ms-regular': require('./src/assets/fonts/Montserrat/Montserrat-Regular.ttf')\n})\n\nexport default function App() {\n  const { width, height } = useWindowDimensions();\n\n  const [userToken, setUserToken] = useState(null);\n  const [appIsReady, setAppIsReady] = useState(false);\n\n  const initialLoginState = {\n    isLoading: true,\n    username: null,\n    userToken: null,\n  };\n\n  const loginReducer = (previousState, action) => {\n    switch(action.type) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...previousState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN':\n        return {\n          ...previousState,\n          username: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT':\n        return {\n          ...previousState,\n          username: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER':\n        return {\n          ...previousState,\n          username: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = useReducer(loginReducer, initialLoginState);\n\n  const authContext = useMemo(() => ({\n    signIn: (username, password) => {\n      // setUserToken('asdf');\n      let userToken;\n      userToken = null;\n      console.log('username: ', username);\n      console.log('password: ', password);\n      // if(username == 'user' && password == 'password') {\n      //   userToken = 'qwer';\n      // }\n      userToken = 'qwer';\n      dispatch({ type: 'LOGIN', id: username, token: userToken });\n    },\n    signOut: () => {\n      // setUserToken(null);\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      setUserToken('asdf');\n      setIsLoading(false);\n    }\n  }));\n\n  // useEffect(() => {\n  //   async function prepare() {\n  //     try {\n  //       await fontsLoading;\n  //       await SplashScreen.preventAutoHideAsync();\n  //     } catch (e) {\n  //       console.warn(e);\n  //     } finally {\n  //       setAppIsReady(true);\n  //     }\n  //   }\n\n  //   prepare();\n  // }, []);\n\n  // const onLayoutRootView = useCallback(async () => {\n  //   if (appIsReady) {\n  //     await SplashScreen.hideAsync();\n  //   }\n  // }, [appIsReady]);\n\n  // if (!appIsReady) {\n  //   return null;\n  // }\n\n//   <View style={styles.container}>\n//     <LinearGradient\n//       // Background Linear Gradient\n//       colors={['#B2FEFA', '#0ED2F7']}\n//       style={[styles.background, { width, height, marginTop: getStatusBarHeight() },]}\n//     />\n// </View>\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      { loginState.userToken != null ? (\n        <DrawerNavigator />\n      )\n      :\n        <SignInScreen />\n      }\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignContent: 'center',\n    justifyContent: 'center',\n  },\n  ellipse: {\n\n  },\n  text: {\n    // fontFamily: 'ms-regular',\n    fontSize: 20,\n    textAlign: 'center'\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}