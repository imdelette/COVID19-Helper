{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"items\", \"onPress\", \"isSelected\", \"containerStyle\", \"renderContent\", \"onItemSelected\", \"getAllSelectedItemIndexes\", \"onItemDeselected\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SelectionGroup = function (_React$Component) {\n  _inherits(SelectionGroup, _React$Component);\n\n  var _super = _createSuper(SelectionGroup);\n\n  function SelectionGroup() {\n    _classCallCheck(this, SelectionGroup);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectionGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          items = _this$props.items,\n          onPress = _this$props.onPress,\n          isSelected = _this$props.isSelected,\n          containerStyle = _this$props.containerStyle,\n          renderContent = _this$props.renderContent,\n          onItemSelected = _this$props.onItemSelected,\n          getAllSelectedItemIndexes = _this$props.getAllSelectedItemIndexes,\n          onItemDeselected = _this$props.onItemDeselected,\n          attributes = _objectWithoutProperties(_this$props, _excluded);\n\n      return _jsx(View, _objectSpread(_objectSpread({\n        style: [{}, containerStyle && containerStyle]\n      }, attributes), {}, {\n        children: items.map(function (item, i) {\n          return renderContent(item, i, isSelected(i), function () {\n            onPress(i);\n\n            _this.forceUpdate();\n\n            if (isSelected(i)) {\n              if (onItemSelected) {\n                var selectedItems = [];\n\n                if (getAllSelectedItemIndexes) {\n                  var selectedItemIndexes = getAllSelectedItemIndexes();\n\n                  if (selectedItemIndexes != null) {\n                    for (var _iterator = _createForOfIteratorHelperLoose(selectedItemIndexes), _step; !(_step = _iterator()).done;) {\n                      var index = _step.value;\n                      selectedItems.push(items[index]);\n                    }\n                  }\n                }\n\n                onItemSelected(item, selectedItems);\n              }\n            } else if (onItemDeselected) {\n              var _selectedItems = [];\n\n              if (getAllSelectedItemIndexes) {\n                var _selectedItemIndexes = getAllSelectedItemIndexes();\n\n                if (_selectedItemIndexes != null) {\n                  for (var _iterator2 = _createForOfIteratorHelperLoose(_selectedItemIndexes), _step2; !(_step2 = _iterator2()).done;) {\n                    var _index = _step2.value;\n\n                    _selectedItems.push(items[_index]);\n                  }\n                }\n              }\n\n              onItemDeselected(item, _selectedItems);\n            }\n          });\n        })\n      }));\n    }\n  }]);\n\n  return SelectionGroup;\n}(React.Component);\n\nexport { SelectionGroup as default };\nexport var SelectionHandler = _createClass(function SelectionHandler() {\n  var _this2 = this;\n\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    maxMultiSelect: 1,\n    allowDeselect: true,\n    defaultSelection: null\n  };\n\n  _classCallCheck(this, SelectionHandler);\n\n  this.getAllSelectedItemIndexes = function () {\n    return _this2.selectedOption;\n  };\n\n  this.selectionHandler = function (index) {\n    if (_this2.maxSelected === 1 && index === _this2.selectedOption && _this2.allowDeselect) {\n      _this2.selectedOption = null;\n    } else if (_this2.maxSelected > 1 && _this2.selectedOption && _this2.selectedOption.includes(index) && _this2.allowDeselect) {\n      _this2.selectedOption.splice(_this2.selectedOption.indexOf(index), 1);\n    } else if (_this2.maxSelected === 1) {\n      _this2.selectedOption = index;\n    } else if (_this2.selectedOption) {\n      _this2.selectedOption.push(index);\n\n      if (_this2.selectedOption.length > _this2.maxSelected) _this2.selectedOption.shift();\n    } else {\n      _this2.selectedOption = [index];\n    }\n  };\n\n  this.isSelected = function (index) {\n    if (_this2.selectedOption === null) return false;\n    if (typeof _this2.selectedOption === 'number') return index === _this2.selectedOption;\n    return _this2.selectedOption.includes(index);\n  };\n\n  this.selectedOption = options.defaultSelection !== undefined ? options.defaultSelection : null;\n  this.maxSelected = options.maxMultiSelect !== undefined ? options.maxMultiSelect : 1;\n  this.allowDeselect = options.allowDeselect !== undefined ? options.allowDeselect : true;\n});\nSelectionGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  onPress: PropTypes.func.isRequired,\n  isSelected: PropTypes.func.isRequired,\n  isDeselected: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  renderContent: PropTypes.func.isRequired,\n  onItemSelected: PropTypes.func,\n  getAllSelectedItemIndexes: PropTypes.func,\n  attributes: PropTypes.any\n};","map":{"version":3,"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/node_modules/react-native-selection-group/src/index.js"],"names":["PropTypes","React","ViewPropTypes","SelectionGroup","props","items","onPress","isSelected","containerStyle","renderContent","onItemSelected","getAllSelectedItemIndexes","onItemDeselected","attributes","map","item","i","forceUpdate","selectedItems","selectedItemIndexes","index","push","Component","SelectionHandler","options","maxMultiSelect","allowDeselect","defaultSelection","selectedOption","selectionHandler","maxSelected","includes","splice","indexOf","length","shift","undefined","propTypes","array","isRequired","func","isDeselected","style","any"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    View,\n    ViewPropTypes\n} from 'react-native';\n\n/**\n * The only real strict requirement is that 'items' is an array of objects all of which have a field \n * called 'optionText'.\n * \n * onPress should probably be Selectionhandler.selectionHandler, same for isSelected. \n * \n * If you are using SelectionHandler, it is important that if you change the *items* prop, you hand \n * over a *new instance* of SelectionHandler. See the ExampleApp for how to do this. Each group of \n * questions can get its own SelectionHandler, just put everything in parallel arrays. \n * \n * Better yet just use the upcoming react-native-survey component that'll handle all of this for you.\n * \n */\nexport default class SelectionGroup extends React.Component {\n\n    render() {\n        const {\n            items,\n            onPress,\n            isSelected,\n            containerStyle,\n            renderContent,\n            onItemSelected,\n            getAllSelectedItemIndexes,\n            onItemDeselected,\n            ...attributes\n        } = this.props;\n        \n        /**\n         * forceUpdate is called below to ensure a re-render happens, in case for whatever reason \n         * the client of this component doesn't take any action that forces a redraw.\n         * This is actually super inefficent code, all elements are redrawn when any single element is touched.\n         */\n        return (\n            <View\n                style={[{}, containerStyle && containerStyle]}\n                {...attributes}\n            >\n                {items.map((item, i) =>\n                    renderContent(\n                        item,\n                        i,\n                        isSelected(i),\n                        () => {\n                            onPress(i); \n                            this.forceUpdate();\n                            if (isSelected(i)) {\n                                if (onItemSelected) { \n                                    const selectedItems = [];\n                                    if (getAllSelectedItemIndexes) {\n                                        const selectedItemIndexes = getAllSelectedItemIndexes();\n                                        if (selectedItemIndexes != null) {\n                                            for (const index of selectedItemIndexes) {\n                                                selectedItems.push(items[index]);\n                                            }\n                                        }\n                                    }\n                                    onItemSelected(item, selectedItems); \n                                }    \n                            } else if (onItemDeselected) { \n                                const selectedItems = [];\n                                if (getAllSelectedItemIndexes) {\n                                    const selectedItemIndexes = getAllSelectedItemIndexes();\n                                    if (selectedItemIndexes != null) {\n                                        for (const index of selectedItemIndexes) {\n                                            selectedItems.push(items[index]);\n                                        }\n                                    }\n                                }\n                                onItemDeselected(item, selectedItems); \n                            }    \n                        }\n                    )\n                )}\n            </View>\n        );\n    }\n}\n\nexport class SelectionHandler {\n    constructor(options = { maxMultiSelect: 1, allowDeselect: true, defaultSelection: null }) {\n        this.selectedOption = options.defaultSelection !== undefined ? options.defaultSelection : null; // An array if maxSelected > 1\n        this.maxSelected = options.maxMultiSelect !== undefined ? options.maxMultiSelect : 1;\n        this.allowDeselect = options.allowDeselect !== undefined ? options.allowDeselect : true;\n    }\n\n    getAllSelectedItemIndexes = () => {\n        return this.selectedOption;\n    }\n\n    selectionHandler = (index) => {\n        if (this.maxSelected === 1 && index === this.selectedOption && this.allowDeselect) {\n            this.selectedOption = null;\n        } else if (this.maxSelected > 1 && this.selectedOption && this.selectedOption.includes(index) && this.allowDeselect) {\n            this.selectedOption.splice(this.selectedOption.indexOf(index), 1);\n        } else if (this.maxSelected === 1) {\n            this.selectedOption = index;\n        } else if (this.selectedOption) {\n            this.selectedOption.push(index);\n            if (this.selectedOption.length > this.maxSelected) this.selectedOption.shift();\n        } else {\n            this.selectedOption = [index];\n        }\n    }\n\n    isSelected = (index) => {\n        if (this.selectedOption === null) return false;\n        if (typeof this.selectedOption === 'number') return index === this.selectedOption;\n        return this.selectedOption.includes(index);\n    }\n}\n\nSelectionGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    onPress: PropTypes.func.isRequired,\n    isSelected: PropTypes.func.isRequired,\n    isDeselected: PropTypes.func,\n    containerStyle: ViewPropTypes.style,\n    renderContent: PropTypes.func.isRequired,\n    onItemSelected: PropTypes.func,\n    getAllSelectedItemIndexes: PropTypes.func,\n    attributes: PropTypes.any\n};\n"]},"metadata":{},"sourceType":"module"}