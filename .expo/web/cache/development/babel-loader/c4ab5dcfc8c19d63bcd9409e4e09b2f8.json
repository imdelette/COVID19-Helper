{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computedFillDataWithAutoFillData = computedFillDataWithAutoFillData;\nexports.computedOffsetXValueWithAutoFillData = void 0;\nexports.computedRealIndexWithAutoFillData = computedRealIndexWithAutoFillData;\nexports.convertToSharedIndex = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar SINGLE_ITEM = _constants.DATA_LENGTH.SINGLE_ITEM,\n    DOUBLE_ITEM = _constants.DATA_LENGTH.DOUBLE_ITEM;\n\nvar isAutoFillData = function () {\n  var _f = function _f(params) {\n    return !!params.loop && !!params.autoFillData;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function isAutoFillData(params){return!!params.loop&&!!params.autoFillData;}\";\n  _f.__workletHash = 12581181073993;\n  _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/utils/computedWithAutoFillData.ts (5:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar convertToSharedIndex = function () {\n  var _f = function _f(params) {\n    var loop = params.loop,\n        rawDataLength = params.rawDataLength,\n        index = params.index,\n        autoFillData = params.autoFillData;\n\n    if (isAutoFillData({\n      loop: loop,\n      autoFillData: autoFillData\n    })) {\n      switch (rawDataLength) {\n        case SINGLE_ITEM:\n          return 0;\n\n        case DOUBLE_ITEM:\n          return index % 2;\n      }\n    }\n\n    return index;\n  };\n\n  _f._closure = {\n    isAutoFillData: isAutoFillData,\n    SINGLE_ITEM: SINGLE_ITEM,\n    DOUBLE_ITEM: DOUBLE_ITEM\n  };\n  _f.asString = \"function convertToSharedIndex(params){const{isAutoFillData,SINGLE_ITEM,DOUBLE_ITEM}=jsThis._closure;{const{loop:loop,rawDataLength:rawDataLength,index:index,autoFillData:autoFillData}=params;if(isAutoFillData({loop:loop,autoFillData:autoFillData})){switch(rawDataLength){case SINGLE_ITEM:return 0;case DOUBLE_ITEM:return index%2;}}return index;}}\";\n  _f.__workletHash = 15638699687620;\n  _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/utils/computedWithAutoFillData.ts (15:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.convertToSharedIndex = convertToSharedIndex;\n\nvar computedOffsetXValueWithAutoFillData = function () {\n  var _f = function _f(params) {\n    var rawDataLength = params.rawDataLength,\n        value = params.value,\n        size = params.size,\n        loop = params.loop,\n        autoFillData = params.autoFillData;\n\n    if (isAutoFillData({\n      loop: loop,\n      autoFillData: autoFillData\n    })) {\n      switch (rawDataLength) {\n        case SINGLE_ITEM:\n          return value % size;\n\n        case DOUBLE_ITEM:\n          return value % (size * 2);\n      }\n    }\n\n    return value;\n  };\n\n  _f._closure = {\n    isAutoFillData: isAutoFillData,\n    SINGLE_ITEM: SINGLE_ITEM,\n    DOUBLE_ITEM: DOUBLE_ITEM\n  };\n  _f.asString = \"function computedOffsetXValueWithAutoFillData(params){const{isAutoFillData,SINGLE_ITEM,DOUBLE_ITEM}=jsThis._closure;{const{rawDataLength:rawDataLength,value:value,size:size,loop:loop,autoFillData:autoFillData}=params;if(isAutoFillData({loop:loop,autoFillData:autoFillData})){switch(rawDataLength){case SINGLE_ITEM:return value%size;case DOUBLE_ITEM:return value%(size*2);}}return value;}}\";\n  _f.__workletHash = 8949924672961;\n  _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/utils/computedWithAutoFillData.ts (33:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexports.computedOffsetXValueWithAutoFillData = computedOffsetXValueWithAutoFillData;\n\nfunction computedRealIndexWithAutoFillData(params) {\n  var index = params.index,\n      dataLength = params.dataLength,\n      loop = params.loop,\n      autoFillData = params.autoFillData;\n\n  if (isAutoFillData({\n    loop: loop,\n    autoFillData: autoFillData\n  })) {\n    switch (dataLength) {\n      case SINGLE_ITEM:\n        return index % 1;\n\n      case DOUBLE_ITEM:\n        return index % 2;\n    }\n  }\n\n  return index;\n}\n\nfunction computedFillDataWithAutoFillData(params) {\n  var data = params.data,\n      loop = params.loop,\n      autoFillData = params.autoFillData,\n      dataLength = params.dataLength;\n\n  if (isAutoFillData({\n    loop: loop,\n    autoFillData: autoFillData\n  })) {\n    switch (dataLength) {\n      case SINGLE_ITEM:\n        return [data[0], data[0], data[0]];\n\n      case DOUBLE_ITEM:\n        return [data[0], data[1], data[0], data[1]];\n    }\n  }\n\n  return data;\n}","map":{"version":3,"sources":["computedWithAutoFillData.ts"],"names":["SINGLE_ITEM","DOUBLE_ITEM","DATA_LENGTH","isAutoFillData","params","convertToSharedIndex","loop","rawDataLength","index","autoFillData","computedOffsetXValueWithAutoFillData","value","size","dataLength","data"],"mappings":"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","sourcesContent":["import { DATA_LENGTH } from 'src/constants';\n\nconst { SINGLE_ITEM, DOUBLE_ITEM } = DATA_LENGTH;\n\nfunction isAutoFillData(params: { autoFillData: boolean; loop: boolean }) {\n    'worklet';\n    return !!params.loop && !!params.autoFillData;\n}\n\ntype BaseParams<T extends object = {}> = {\n    autoFillData: boolean;\n    loop: boolean;\n} & T;\n\nexport function convertToSharedIndex(\n    params: BaseParams<{ index: number; rawDataLength: number }>\n) {\n    'worklet';\n    const { loop, rawDataLength, index, autoFillData } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (rawDataLength) {\n            case SINGLE_ITEM:\n                return 0;\n            case DOUBLE_ITEM:\n                return index % 2;\n        }\n    }\n\n    return index;\n}\n\nexport function computedOffsetXValueWithAutoFillData(\n    params: BaseParams<{\n        rawDataLength: number;\n        value: number;\n        size: number;\n    }>\n) {\n    'worklet';\n\n    const { rawDataLength, value, size, loop, autoFillData } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (rawDataLength) {\n            case SINGLE_ITEM:\n                return value % size;\n            case DOUBLE_ITEM:\n                return value % (size * 2);\n        }\n    }\n\n    return value;\n}\n\nexport function computedRealIndexWithAutoFillData(\n    params: BaseParams<{\n        index: number;\n        dataLength: number;\n    }>\n) {\n    const { index, dataLength, loop, autoFillData } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (dataLength) {\n            case SINGLE_ITEM:\n                return index % 1;\n            case DOUBLE_ITEM:\n                return index % 2;\n        }\n    }\n\n    return index;\n}\n\nexport function computedFillDataWithAutoFillData<T>(\n    params: BaseParams<{\n        data: T[];\n        dataLength: number;\n    }>\n): T[] {\n    const { data, loop, autoFillData, dataLength } = params;\n\n    if (isAutoFillData({ loop, autoFillData })) {\n        switch (dataLength) {\n            case SINGLE_ITEM:\n                return [data[0], data[0], data[0]];\n            case DOUBLE_ITEM:\n                return [data[0], data[1], data[0], data[1]];\n        }\n    }\n\n    return data;\n}\n"]},"metadata":{},"sourceType":"script"}