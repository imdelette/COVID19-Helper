{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseLayout = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _useCheckMounted = require(\"../hooks/useCheckMounted\");\n\nvar _useOffsetX = require(\"../hooks/useOffsetX\");\n\nvar _LazyView = require(\"../LazyView\");\n\nvar _store = require(\"../store\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar BaseLayout = function BaseLayout(props) {\n  var mounted = (0, _useCheckMounted.useCheckMounted)();\n  var handlerOffsetX = props.handlerOffsetX,\n      index = props.index,\n      children = props.children,\n      visibleRanges = props.visibleRanges,\n      animationStyle = props.animationStyle;\n\n  var context = _react.default.useContext(_store.CTX);\n\n  var _context$props = context.props,\n      loop = _context$props.loop,\n      data = _context$props.data,\n      width = _context$props.width,\n      height = _context$props.height,\n      vertical = _context$props.vertical,\n      customConfig = _context$props.customConfig,\n      mode = _context$props.mode,\n      modeConfig = _context$props.modeConfig;\n  var size = vertical ? height : width;\n\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      shouldUpdate = _React$useState2[0],\n      setShouldUpdate = _React$useState2[1];\n\n  var offsetXConfig = _objectSpread({\n    handlerOffsetX: handlerOffsetX,\n    index: index,\n    size: size,\n    data: data,\n    loop: loop\n  }, typeof customConfig === 'function' ? customConfig() : {});\n\n  if (mode === 'horizontal-stack') {\n    var _ref = modeConfig,\n        snapDirection = _ref.snapDirection,\n        showLength = _ref.showLength;\n    offsetXConfig = {\n      handlerOffsetX: handlerOffsetX,\n      index: index,\n      size: size,\n      data: data,\n      loop: loop,\n      type: snapDirection === 'right' ? 'negative' : 'positive',\n      viewCount: showLength\n    };\n  }\n\n  var x = (0, _useOffsetX.useOffsetX)(offsetXConfig, visibleRanges);\n  var animationValue = (0, _reactNativeReanimated.useDerivedValue)(function () {\n    var _f = function _f() {\n      return x.value / size;\n    };\n\n    _f._closure = {\n      x: x,\n      size: size\n    };\n    _f.asString = \"function _f(){const{x,size}=jsThis._closure;{return x.value/size;}}\";\n    _f.__workletHash = 9077192607952;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (71:43)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [x, size]);\n  var animatedStyle = (0, _reactNativeReanimated.useAnimatedStyle)(function () {\n    var _f = function _f() {\n      return animationStyle(x.value / size);\n    };\n\n    _f._closure = {\n      animationStyle: animationStyle,\n      x: x,\n      size: size\n    };\n    _f.asString = \"function _f(){const{animationStyle,x,size}=jsThis._closure;{return animationStyle(x.value/size);}}\";\n    _f.__workletHash = 3916054905053;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (74:8)\";\n    _f.__optimalization = 2;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [animationStyle]);\n\n  var updateView = _react.default.useCallback(function (negativeRange, positiveRange) {\n    mounted.current && setShouldUpdate(index >= negativeRange[0] && index <= negativeRange[1] || index >= positiveRange[0] && index <= positiveRange[1]);\n  }, [index, mounted]);\n\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      return visibleRanges.value;\n    };\n\n    _f._closure = {\n      visibleRanges: visibleRanges\n    };\n    _f.asString = \"function _f(){const{visibleRanges}=jsThis._closure;{return visibleRanges.value;}}\";\n    _f.__workletHash = 15231519758579;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (90:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    var _f = function _f() {\n      (0, _reactNativeReanimated.runOnJS)(updateView)(visibleRanges.value.negativeRange, visibleRanges.value.positiveRange);\n    };\n\n    _f._closure = {\n      runOnJS: _reactNativeReanimated.runOnJS,\n      updateView: updateView,\n      visibleRanges: visibleRanges\n    };\n    _f.asString = \"function _f(){const{runOnJS,updateView,visibleRanges}=jsThis._closure;{runOnJS(updateView)(visibleRanges.value.negativeRange,visibleRanges.value.positiveRange);}}\";\n    _f.__workletHash = 6352504350554;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/layouts/BaseLayout.tsx (91:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [visibleRanges.value]);\n  return _react.default.createElement(_reactNativeReanimated.default.View, {\n    style: [{\n      width: width || '100%',\n      height: height || '100%',\n      position: 'absolute'\n    }, animatedStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_LazyView.LazyView, {\n    shouldUpdate: shouldUpdate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, children({\n    animationValue: animationValue\n  })));\n};\n\nexports.BaseLayout = BaseLayout;","map":{"version":3,"mappings":"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","names":["BaseLayout","props","mounted","handlerOffsetX","index","children","visibleRanges","animationStyle","context","React","useContext","CTX","loop","data","width","height","vertical","customConfig","mode","modeConfig","size","useState","shouldUpdate","setShouldUpdate","offsetXConfig","snapDirection","showLength","type","viewCount","x","animationValue","value","_f","global","animatedStyle","updateView","useCallback","negativeRange","positiveRange","current","runOnJS","_react","_reactNativeReanimated","View","style","position","__self","__source","fileName","lineNumber","columnNumber","_LazyView"],"sources":["BaseLayout.tsx"],"sourcesContent":["import React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport Animated, {\n    AnimatedStyleProp,\n    runOnJS,\n    useAnimatedReaction,\n    useAnimatedStyle,\n    useDerivedValue,\n} from 'react-native-reanimated';\nimport { useCheckMounted } from 'src/hooks/useCheckMounted';\nimport { IOpts, useOffsetX } from '../hooks/useOffsetX';\nimport type { IVisibleRanges } from '../hooks/useVisibleRanges';\nimport { LazyView } from '../LazyView';\nimport { CTX } from '../store';\nimport type { ILayoutConfig } from './stack';\n\nexport type TAnimationStyle = (value: number) => AnimatedStyleProp<ViewStyle>;\n\nexport const BaseLayout: React.FC<{\n    index: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    visibleRanges: IVisibleRanges;\n    animationStyle: TAnimationStyle;\n    children: (ctx: {\n        animationValue: Animated.SharedValue<number>;\n    }) => React.ReactElement;\n}> = (props) => {\n    const mounted = useCheckMounted();\n    const { handlerOffsetX, index, children, visibleRanges, animationStyle } =\n        props;\n\n    const context = React.useContext(CTX);\n    const {\n        props: {\n            loop,\n            data,\n            width,\n            height,\n            vertical,\n            customConfig,\n            mode,\n            modeConfig,\n        },\n    } = context;\n    const size = vertical ? height : width;\n    const [shouldUpdate, setShouldUpdate] = React.useState(false);\n    let offsetXConfig: IOpts = {\n        handlerOffsetX,\n        index,\n        size,\n        data,\n        loop,\n        ...(typeof customConfig === 'function' ? customConfig() : {}),\n    };\n\n    if (mode === 'horizontal-stack') {\n        const { snapDirection, showLength } = modeConfig as ILayoutConfig;\n\n        offsetXConfig = {\n            handlerOffsetX,\n            index,\n            size,\n            data,\n            loop,\n            type: snapDirection === 'right' ? 'negative' : 'positive',\n            viewCount: showLength,\n        };\n    }\n\n    const x = useOffsetX(offsetXConfig, visibleRanges);\n    const animationValue = useDerivedValue(() => x.value / size, [x, size]);\n    const animatedStyle = useAnimatedStyle(\n        // @ts-ignore\n        () => animationStyle(x.value / size),\n        [animationStyle]\n    );\n\n    const updateView = React.useCallback(\n        (negativeRange: number[], positiveRange: number[]) => {\n            mounted.current &&\n                setShouldUpdate(\n                    (index >= negativeRange[0] && index <= negativeRange[1]) ||\n                        (index >= positiveRange[0] && index <= positiveRange[1])\n                );\n        },\n        [index, mounted]\n    );\n\n    useAnimatedReaction(\n        () => visibleRanges.value,\n        () => {\n            runOnJS(updateView)(\n                visibleRanges.value.negativeRange,\n                visibleRanges.value.positiveRange\n            );\n        },\n        [visibleRanges.value]\n    );\n\n    return (\n        <Animated.View\n            style={[\n                {\n                    width: width || '100%',\n                    height: height || '100%',\n                    position: 'absolute',\n                },\n                animatedStyle,\n            ]}\n        >\n            <LazyView shouldUpdate={shouldUpdate}>\n                {children({ animationValue })}\n            </LazyView>\n        </Animated.View>\n    );\n};\n"]},"metadata":{},"sourceType":"script"}