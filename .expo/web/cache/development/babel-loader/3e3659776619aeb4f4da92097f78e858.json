{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport LoginScreen from \"../screens/SignInScreen\";\nimport ExcerciseTypesScreen from \"../screens/ExcerciseTypesScreen\";\nimport ExcerciseScreen from \"../screens/ExcerciseScreen\";\nimport TabNavigator from \"./TabNavigator\";\nimport { AuthContext } from \"../components/context\";\nimport CustomDrawer from \"../custom/CustomDrawer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function DrawerNavigator() {\n  var _useContext = useContext(AuthContext),\n      signOut = _useContext.signOut;\n\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return _jsx(CustomDrawer, _objectSpread({}, props));\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: TabNavigator,\n        options: {\n          title: 'Главная',\n          drawerIcon: function drawerIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return _jsx(Ionicons, {\n              name: \"ios-home-sharp\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          title: 'Профиль',\n          drawerIcon: function drawerIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return _jsx(Ionicons, {\n              name: \"ios-person\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"ExcerciseTypes\",\n        component: ExcerciseTypesScreen,\n        options: {\n          title: 'Виды упражнений',\n          drawerIcon: function drawerIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return _jsx(Ionicons, {\n              name: \"heart-circle-outline\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"Excercise\",\n        component: ExcerciseScreen,\n        options: {\n          title: 'Упражнение',\n          drawerItemStyle: {\n            display: 'none'\n          },\n          drawerIcon: ''\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useContext","createDrawerNavigator","NavigationContainer","Ionicons","ProfileScreen","LoginScreen","ExcerciseTypesScreen","ExcerciseScreen","TabNavigator","AuthContext","CustomDrawer","Drawer","DrawerNavigator","signOut","props","title","drawerIcon","color","size","drawerItemStyle","display"],"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/src/navigation/DrawerNavigator.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport { Button, View } from 'react-native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport ProfileScreen from '../screens/ProfileScreen';\nimport LoginScreen from '../screens/SignInScreen';\nimport ExcerciseTypesScreen from '../screens/ExcerciseTypesScreen';\nimport ExcerciseScreen from '../screens/ExcerciseScreen';\nimport TabNavigator from './TabNavigator';\nimport { AuthContext } from '../components/context';\nimport CustomDrawer from '../custom/CustomDrawer';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function DrawerNavigator() {\n  const { signOut } = useContext(AuthContext);\n\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator \n        drawerContent={props => <CustomDrawer {...props} />} \n        // screenOptions={{headerShown: false}}\n        >\n        <Drawer.Screen\n            name='Home'\n            component={TabNavigator}\n            options={{\n              title: 'Главная',\n              drawerIcon: ({color, size}) => (\n                <Ionicons \n                    name='ios-home-sharp'\n                    color={color}\n                    size={size}\n                    />\n              ),\n            }}\n            />\n        <Drawer.Screen \n            name='Profile'\n            component={ProfileScreen}\n            options={{\n              title: 'Профиль',\n              drawerIcon: ({color, size}) => (\n                <Ionicons \n                    name='ios-person'\n                    color={color}\n                    size={size}\n                    />\n              )\n            }}\n          />\n        <Drawer.Screen\n            name='ExcerciseTypes'\n            component={ExcerciseTypesScreen}\n            options={{\n              title: 'Виды упражнений',\n              drawerIcon: ({color, size}) => (\n                <Ionicons \n                    name='heart-circle-outline'\n                    color={color}\n                    size={size}\n                    />\n              )\n            }}\n            />\n        <Drawer.Screen\n            name=\"Excercise\"\n            component={ExcerciseScreen}\n            options={{\n              title: 'Упражнение', \n            drawerItemStyle: {display: 'none'},\n            drawerIcon: '',\n            }}\n            />\n        {/* <Drawer.Screen \n            name='LogOut'\n            onPress={() => { signOut() }}\n            options={{title: 'Выйти из профиля'}}\n            /> */}\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP;AAEA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,YAAP;AACA,SAASC,WAAT;AACA,OAAOC,YAAP;;;AAEA,IAAMC,MAAM,GAAGV,qBAAqB,EAApC;AAEA,eAAe,SAASW,eAAT,GAA2B;EACxC,kBAAoBZ,UAAU,CAACS,WAAD,CAA9B;EAAA,IAAQI,OAAR,eAAQA,OAAR;;EAEA,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,MAAD,CAAQ,SAAR;MACE,aAAa,EAAE,uBAAAC,KAAK;QAAA,OAAI,KAAC,YAAD,oBAAkBA,KAAlB,EAAJ;MAAA,CADtB;MAAA,WAIE,KAAC,MAAD,CAAQ,MAAR;QACI,IAAI,EAAC,MADT;QAEI,SAAS,EAAEN,YAFf;QAGI,OAAO,EAAE;UACPO,KAAK,EAAE,SADA;UAEPC,UAAU,EAAE;YAAA,IAAEC,KAAF,QAAEA,KAAF;YAAA,IAASC,IAAT,QAASA,IAAT;YAAA,OACV,KAAC,QAAD;cACI,IAAI,EAAC,gBADT;cAEI,KAAK,EAAED,KAFX;cAGI,IAAI,EAAEC;YAHV,EADU;UAAA;QAFL;MAHb,EAJF,EAkBE,KAAC,MAAD,CAAQ,MAAR;QACI,IAAI,EAAC,SADT;QAEI,SAAS,EAAEd,aAFf;QAGI,OAAO,EAAE;UACPW,KAAK,EAAE,SADA;UAEPC,UAAU,EAAE;YAAA,IAAEC,KAAF,SAAEA,KAAF;YAAA,IAASC,IAAT,SAASA,IAAT;YAAA,OACV,KAAC,QAAD;cACI,IAAI,EAAC,YADT;cAEI,KAAK,EAAED,KAFX;cAGI,IAAI,EAAEC;YAHV,EADU;UAAA;QAFL;MAHb,EAlBF,EAgCE,KAAC,MAAD,CAAQ,MAAR;QACI,IAAI,EAAC,gBADT;QAEI,SAAS,EAAEZ,oBAFf;QAGI,OAAO,EAAE;UACPS,KAAK,EAAE,iBADA;UAEPC,UAAU,EAAE;YAAA,IAAEC,KAAF,SAAEA,KAAF;YAAA,IAASC,IAAT,SAASA,IAAT;YAAA,OACV,KAAC,QAAD;cACI,IAAI,EAAC,sBADT;cAEI,KAAK,EAAED,KAFX;cAGI,IAAI,EAAEC;YAHV,EADU;UAAA;QAFL;MAHb,EAhCF,EA8CE,KAAC,MAAD,CAAQ,MAAR;QACI,IAAI,EAAC,WADT;QAEI,SAAS,EAAEX,eAFf;QAGI,OAAO,EAAE;UACPQ,KAAK,EAAE,YADA;UAETI,eAAe,EAAE;YAACC,OAAO,EAAE;UAAV,CAFR;UAGTJ,UAAU,EAAE;QAHH;MAHb,EA9CF;IAAA;EADF,EADF;AAiED"},"metadata":{},"sourceType":"module"}