{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect, useMemo, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { globalStyle } from \"../styles/style\";\nimport { AuthContext } from \"../components/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    username: '',\n    password: '',\n    checkTextInputChange: false,\n    secureTextEntry: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      signIn = _useContext.signIn;\n\n  var loginHandle = function loginHandle(username, password) {\n    signIn(username, password);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        placeholderTextColor: \"black\",\n        onChangeText: function onChangeText(username) {\n          setData(username);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        placeholderTextColor: \"black\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          setData(password);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        style: styles.forgotBtn,\n        children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: globalStyle.btn,\n      onPress: function onPress() {\n        loginHandle(data.username, data.password);\n      },\n      children: _jsx(Text, {\n        children: \"\\u0412\\u041E\\u0419\\u0422\\u0418\"\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        style: styles.registrationBtn,\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    backgroundColor: \"powderblue\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: 'flex-start'\n  },\n  textInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgotBtn: {\n    height: 30\n  },\n  registrationBtn: {\n    height: 50,\n    color: 'blue',\n    textDecorationLine: 'underline',\n    justifyContent: 'flex-end'\n  }\n});","map":{"version":3,"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/src/screens/SignInScreen.js"],"names":["StatusBar","React","useState","useEffect","useMemo","useContext","globalStyle","AuthContext","SignInScreen","navigation","username","password","checkTextInputChange","secureTextEntry","data","setData","signIn","loginHandle","styles","container","inputView","textInput","forgotBtn","btn","registrationBtn","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","width","height","marginBottom","padding","marginLeft","color","textDecorationLine"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect, useMemo, useContext } from \"react\";\nimport { StyleSheet, Text, View, Image, TextInput, TouchableOpacity, } from \"react-native\";\n\nimport { globalStyle } from \"../styles/style\";\n\nimport { AuthContext } from \"../components/context\";\n\nexport default function SignInScreen({ navigation }) {\n  const [data, setData] = useState({\n    username: '',\n    password: '',\n    checkTextInputChange: false,\n    secureTextEntry: true,\n  });\n\n  const { signIn } = useContext(AuthContext);\n\n  const loginHandle = (username, password) => {\n    signIn(username, password)\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Имя пользователя\"\n          placeholderTextColor=\"black\"\n          onChangeText={(username) => { setData(username) }}\n        />\n      </View>\n \n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Пароль\"\n          placeholderTextColor=\"black\"\n          secureTextEntry={true}\n          onChangeText={(password) => { setData(password) }}\n        />\n      </View>\n \n      <TouchableOpacity>\n        <Text style={styles.forgotBtn}>Забыли пароль?</Text>\n      </TouchableOpacity>\n \n      <TouchableOpacity \n        style={globalStyle.btn}\n        onPress={() => { loginHandle(data.username, data.password) }}\n      >\n        <Text>ВОЙТИ</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity>\n        <Text style={styles.registrationBtn}>Регистрация</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  inputView: {\n    backgroundColor: \"powderblue\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: 'flex-start',\n  },\n \n  textInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20,\n  },\n \n  forgotBtn: {\n    height: 30,\n  },\n\n  registrationBtn: {\n    height: 50,\n    color: 'blue',\n    textDecorationLine: 'underline',\n    justifyContent: 'flex-end',\n  },\n});"]},"metadata":{},"sourceType":"module"}