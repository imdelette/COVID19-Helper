{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { globalStyle } from \"../styles/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthForm = function AuthForm() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n};\n\nexport default function Login() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        style: styles.forgotBtn,\n        children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: globalStyle.btn,\n      children: _jsx(Text, {\n        children: \"\\u0412\\u041E\\u0419\\u0422\\u0418\"\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        style: styles.registrationBtn,\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputView: {\n    backgroundColor: \"powderblue\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: 'flex-start'\n  },\n  textInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgotBtn: {\n    height: 30\n  },\n  registrationBtn: {\n    height: 50,\n    color: 'blue',\n    textDecorationLine: 'underline',\n    justifyContent: 'flex-end'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","globalStyle","AuthForm","email","setEmail","password","setPassword","Login","styles","container","inputView","textInput","forgotBtn","btn","registrationBtn","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderRadius","width","height","marginBottom","padding","marginLeft","color","textDecorationLine"],"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/src/screens/LoginScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Image, TextInput, TouchableOpacity, } from \"react-native\";\n\nimport { globalStyle } from \"../styles/style\";\n \nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n}\n\nexport default function Login() {\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Электронная почта\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(email) => setEmail(email)}\n        />\n      </View>\n \n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"Пароль\"\n          placeholderTextColor=\"#003f5c\"\n          secureTextEntry={true}\n          onChangeText={(password) => setPassword(password)}\n        />\n      </View>\n \n      <TouchableOpacity>\n        <Text style={styles.forgotBtn}>Забыли пароль?</Text>\n      </TouchableOpacity>\n \n      <TouchableOpacity style={globalStyle.btn}>\n        <Text>ВОЙТИ</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity>\n        <Text style={styles.registrationBtn}>Регистрация</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  inputView: {\n    backgroundColor: \"powderblue\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: 'flex-start',\n  },\n \n  textInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20,\n  },\n \n  forgotBtn: {\n    height: 30,\n  },\n\n  registrationBtn: {\n    height: 50,\n    color: 'blue',\n    textDecorationLine: 'underline',\n    justifyContent: 'flex-end',\n  },\n});"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,SAASC,WAAT;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,gBAA0BF,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOG,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;AACD,CAHD;;AAKA,eAAe,SAASC,KAAT,GAAiB;EAC9B,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EADF,EAEE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,SAApB;MAAA,UACE,KAAC,SAAD;QACE,KAAK,EAAEF,MAAM,CAACG,SADhB;QAEE,WAAW,EAAC,mGAFd;QAGE,oBAAoB,EAAC,SAHvB;QAIE,YAAY,EAAE,sBAACR,KAAD;UAAA,OAAWC,QAAQ,CAACD,KAAD,CAAnB;QAAA;MAJhB;IADF,EAFF,EAWE,KAAC,IAAD;MAAM,KAAK,EAAEK,MAAM,CAACE,SAApB;MAAA,UACE,KAAC,SAAD;QACE,KAAK,EAAEF,MAAM,CAACG,SADhB;QAEE,WAAW,EAAC,sCAFd;QAGE,oBAAoB,EAAC,SAHvB;QAIE,eAAe,EAAE,IAJnB;QAKE,YAAY,EAAE,sBAACN,QAAD;UAAA,OAAcC,WAAW,CAACD,QAAD,CAAzB;QAAA;MALhB;IADF,EAXF,EAqBE,KAAC,gBAAD;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEG,MAAM,CAACI,SAApB;QAAA;MAAA;IADF,EArBF,EAyBE,KAAC,gBAAD;MAAkB,KAAK,EAAEX,WAAW,CAACY,GAArC;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EAzBF,EA6BE,KAAC,gBAAD;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEL,MAAM,CAACM,eAApB;QAAA;MAAA;IADF,EA7BF;EAAA,EADF;AAmCD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADoB;EAQ/BV,SAAS,EAAE;IACTQ,eAAe,EAAE,YADR;IAETG,YAAY,EAAE,EAFL;IAGTC,KAAK,EAAE,KAHE;IAITC,MAAM,EAAE,EAJC;IAKTC,YAAY,EAAE,EALL;IAMTL,UAAU,EAAE;EANH,CARoB;EAiB/BR,SAAS,EAAE;IACTY,MAAM,EAAE,EADC;IAETN,IAAI,EAAE,CAFG;IAGTQ,OAAO,EAAE,EAHA;IAITC,UAAU,EAAE;EAJH,CAjBoB;EAwB/Bd,SAAS,EAAE;IACTW,MAAM,EAAE;EADC,CAxBoB;EA4B/BT,eAAe,EAAE;IACfS,MAAM,EAAE,EADO;IAEfI,KAAK,EAAE,MAFQ;IAGfC,kBAAkB,EAAE,WAHL;IAIfR,cAAc,EAAE;EAJD;AA5Bc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}