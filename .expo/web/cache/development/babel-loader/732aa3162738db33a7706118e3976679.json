{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useMemo, React } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from 'expo-font';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { DrawerNavigator } from \"./src/navigation/DrawerNavigator\";\nimport { AuthContext } from \"./src/components/context\";\nimport { SignInScreen } from \"./src/screens/SignInScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar fonts = function fonts() {\n  return Font.loadAsync({\n    'rs-bold': require(\"./src/assets/fonts/RobotoSlab/RobotoSlab-Bold.ttf\"),\n    'rs-light': require(\"./src/assets/fonts/RobotoSlab/RobotoSlab-Light.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      font = _useState2[0],\n      setFont = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userToken = _useState6[0],\n      setUserToken = _useState6[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn() {\n        setUserToken('asdf');\n        setIsLoading(false);\n      },\n      signOut: function signOut() {\n        setUserToken(null);\n        setIsLoading(false);\n      },\n      signUp: function signUp() {\n        setUserToken('asdf');\n        setIsLoading(false);\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n\n  if (font) {\n    return _jsx(AuthContext.Provider, {\n      value: authContext,\n      children: _jsx(NavigationContainer, {\n        children: userToken != null ? _jsx(DrawerNavigator, {}) : _jsx(SignInScreen, {})\n      })\n    });\n  } else {\n    return _jsx(AppLoading, {\n      startAsync: fonts,\n      onFinish: function onFinish() {\n        return setFont(true);\n      },\n      onError: console.warn\n    });\n  }\n}","map":{"version":3,"names":["useState","useEffect","useMemo","React","AppLoading","Font","NavigationContainer","DrawerNavigator","AuthContext","SignInScreen","fonts","loadAsync","require","App","font","setFont","isLoading","setIsLoading","userToken","setUserToken","authContext","signIn","signOut","signUp","setTimeout","flex","justifyContent","alignItems","console","warn"],"sources":["/home/bruh/Desktop/react-native-app/COVID19-Helper/App.js"],"sourcesContent":["import { useState, useEffect, useMemo, React, } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { View,} from \"react-native\";\n\nimport  * as Font from 'expo-font';\nimport { ActivityIndicator } from \"react-native-web\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport { DrawerNavigator } from './src/navigation/DrawerNavigator';\nimport { AuthContext } from './src/components/context';\nimport { SignInScreen } from './src/screens/SignInScreen';\n\nconst fonts = () => Font.loadAsync({\n    'rs-bold': require('./src/assets/fonts/RobotoSlab/RobotoSlab-Bold.ttf'),\n    'rs-light': require('./src/assets/fonts/RobotoSlab/RobotoSlab-Light.ttf')\n})\n\nexport default function App() {\n  const [font, setFont] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userToken, setUserToken] = useState(null);\n\n  const authContext = useMemo(() => ({\n    signIn: () => {\n      setUserToken('asdf');\n      setIsLoading(false);\n    },\n    signOut: () => {\n      setUserToken(null);\n      setIsLoading(false);\n    },\n    signUp: () => {\n      setUserToken('asdf');\n      setIsLoading(false);\n    }\n  }));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n  \n  if (isLoading) {\n    return(\n      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center',}}>\n        <ActivityIndicator size=\"large\"/>\n      </View>\n    )\n  }\n\n  if(font) {\n    return (\n      <AuthContext.Provider value={authContext}>\n        <NavigationContainer>\n          { userToken != null ? (\n            <DrawerNavigator />\n          )\n          :\n            <SignInScreen />\n          }\n        </NavigationContainer>\n      </AuthContext.Provider>\n    );\n  } else {\n    return (\n      <AppLoading startAsync={fonts} \n        onFinish={() => setFont(true)}\n        onError={console.warn} />\n    );\n  }\n}"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,KAAvC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAGA,OAAQ,KAAKC,IAAb,MAAuB,WAAvB;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,eAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;EAAA,OAAML,IAAI,CAACM,SAAL,CAAe;IAC/B,WAAWC,OAAO,qDADa;IAE/B,YAAYA,OAAO;EAFY,CAAf,CAAN;AAAA,CAAd;;AAKA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAwBb,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOc,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAkCf,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOgB,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCjB,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOkB,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,WAAW,GAAGlB,OAAO,CAAC;IAAA,OAAO;MACjCmB,MAAM,EAAE,kBAAM;QACZF,YAAY,CAAC,MAAD,CAAZ;QACAF,YAAY,CAAC,KAAD,CAAZ;MACD,CAJgC;MAKjCK,OAAO,EAAE,mBAAM;QACbH,YAAY,CAAC,IAAD,CAAZ;QACAF,YAAY,CAAC,KAAD,CAAZ;MACD,CARgC;MASjCM,MAAM,EAAE,kBAAM;QACZJ,YAAY,CAAC,MAAD,CAAZ;QACAF,YAAY,CAAC,KAAD,CAAZ;MACD;IAZgC,CAAP;EAAA,CAAD,CAA3B;EAeAhB,SAAS,CAAC,YAAM;IACduB,UAAU,CAAC,YAAM;MACfP,YAAY,CAAC,KAAD,CAAZ;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,IAAID,SAAJ,EAAe;IACb,OACE,KAAC,IAAD;MAAM,KAAK,EAAE;QAACS,IAAI,EAAE,CAAP;QAAUC,cAAc,EAAE,QAA1B;QAAoCC,UAAU,EAAE;MAAhD,CAAb;MAAA,UACE,KAAC,iBAAD;QAAmB,IAAI,EAAC;MAAxB;IADF,EADF;EAKD;;EAED,IAAGb,IAAH,EAAS;IACP,OACE,KAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAEM,WAA7B;MAAA,UACE,KAAC,mBAAD;QAAA,UACIF,SAAS,IAAI,IAAb,GACA,KAAC,eAAD,KADA,GAIA,KAAC,YAAD;MALJ;IADF,EADF;EAYD,CAbD,MAaO;IACL,OACE,KAAC,UAAD;MAAY,UAAU,EAAER,KAAxB;MACE,QAAQ,EAAE;QAAA,OAAMK,OAAO,CAAC,IAAD,CAAb;MAAA,CADZ;MAEE,OAAO,EAAEa,OAAO,CAACC;IAFnB,EADF;EAKD;AACF"},"metadata":{},"sourceType":"module"}