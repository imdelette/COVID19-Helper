{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCarouselController = useCarouselController;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _constants = require(\"../constants\");\n\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\n\nvar _dealWithAnimation = require(\"../utils/dealWithAnimation\");\n\nvar _computedWithAutoFillData = require(\"../utils/computedWithAutoFillData\");\n\nvar _log = require(\"../utils/log\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useCarouselController(options) {\n  var size = options.size,\n      data = options.data,\n      loop = options.loop,\n      handlerOffsetX = options.handlerOffsetX,\n      withAnimation = options.withAnimation,\n      _options$defaultIndex = options.defaultIndex,\n      defaultIndex = _options$defaultIndex === void 0 ? 0 : _options$defaultIndex,\n      duration = options.duration,\n      autoFillData = options.autoFillData;\n\n  var dataInfo = _react.default.useMemo(function () {\n    return {\n      length: data.length,\n      disable: !data.length,\n      originalLength: data.length\n    };\n  }, [data]);\n\n  var index = (0, _reactNativeReanimated.useSharedValue)(defaultIndex);\n  var sharedIndex = (0, _react.useRef)(defaultIndex);\n  var sharedPreIndex = (0, _react.useRef)(defaultIndex);\n\n  var currentFixedPage = _react.default.useCallback(function () {\n    if (loop) {\n      return -Math.round(handlerOffsetX.value / size);\n    }\n\n    var fixed = handlerOffsetX.value / size % dataInfo.length;\n    return Math.round(handlerOffsetX.value <= 0 ? Math.abs(fixed) : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0));\n  }, [handlerOffsetX, dataInfo, size, loop]);\n\n  function setSharedIndex(newSharedIndex) {\n    sharedIndex.current = newSharedIndex;\n  }\n\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      var handlerOffsetXValue = handlerOffsetX.value;\n      var toInt = (0, _log.round)(handlerOffsetXValue / size) % dataInfo.length;\n      var isPositive = handlerOffsetXValue <= 0;\n      var i = isPositive ? Math.abs(toInt) : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n      var newSharedIndexValue = (0, _computedWithAutoFillData.convertToSharedIndex)({\n        loop: loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData,\n        index: i\n      });\n      return {\n        i: i,\n        newSharedIndexValue: newSharedIndexValue\n      };\n    };\n\n    _f._closure = {\n      handlerOffsetX: handlerOffsetX,\n      round: _log.round,\n      size: size,\n      dataInfo: dataInfo,\n      convertToSharedIndex: _computedWithAutoFillData.convertToSharedIndex,\n      loop: loop,\n      autoFillData: autoFillData\n    };\n    _f.asString = \"function _f(){const{handlerOffsetX,round,size,dataInfo,convertToSharedIndex,loop,autoFillData}=jsThis._closure;{const handlerOffsetXValue=handlerOffsetX.value;const toInt=round(handlerOffsetXValue/size)%dataInfo.length;const isPositive=handlerOffsetXValue<=0;const i=isPositive?Math.abs(toInt):Math.abs(toInt>0?dataInfo.length-toInt:0);const newSharedIndexValue=convertToSharedIndex({loop:loop,rawDataLength:dataInfo.originalLength,autoFillData:autoFillData,index:i});return{i:i,newSharedIndexValue:newSharedIndexValue};}}\";\n    _f.__workletHash = 14011541648783;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (83:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    var _f = function _f(_ref) {\n      var i = _ref.i,\n          newSharedIndexValue = _ref.newSharedIndexValue;\n      index.value = i;\n      (0, _reactNativeReanimated.runOnJS)(setSharedIndex)(newSharedIndexValue);\n    };\n\n    _f._closure = {\n      index: index,\n      runOnJS: _reactNativeReanimated.runOnJS,\n      setSharedIndex: setSharedIndex\n    };\n    _f.asString = \"function _f({i:i,newSharedIndexValue:newSharedIndexValue}){const{index,runOnJS,setSharedIndex}=jsThis._closure;{index.value=i;runOnJS(setSharedIndex)(newSharedIndexValue);}}\";\n    _f.__workletHash = 16638491076412;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (103:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [sharedPreIndex, sharedIndex, size, dataInfo, index, loop, autoFillData, handlerOffsetX]);\n\n  var getCurrentIndex = _react.default.useCallback(function () {\n    return index.value;\n  }, [index]);\n\n  var canSliding = _react.default.useCallback(function () {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n\n  var onScrollEnd = _react.default.useCallback(function () {\n    options.onScrollEnd == null ? void 0 : options.onScrollEnd();\n  }, [options]);\n\n  var onScrollBegin = _react.default.useCallback(function () {\n    options.onScrollBegin == null ? void 0 : options.onScrollBegin();\n  }, [options]);\n\n  var scrollWithTiming = _react.default.useCallback(function () {\n    var _f = function _f(toValue, onFinished) {\n      var callback = function () {\n        var _f = function _f(isFinished) {\n          if (isFinished) {\n            (0, _reactNativeReanimated.runOnJS)(onScrollEnd)();\n            onFinished && (0, _reactNativeReanimated.runOnJS)(onFinished)();\n          }\n        };\n\n        _f._closure = {\n          runOnJS: _reactNativeReanimated.runOnJS,\n          onScrollEnd: onScrollEnd,\n          onFinished: onFinished\n        };\n        _f.asString = \"function _f(isFinished){const{runOnJS,onScrollEnd,onFinished}=jsThis._closure;{if(isFinished){runOnJS(onScrollEnd)();onFinished&&runOnJS(onFinished)();}}}\";\n        _f.__workletHash = 7767198641261;\n        _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (138:29)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }();\n\n      var defaultWithAnimation = {\n        type: 'timing',\n        config: {\n          duration: duration,\n          easing: _constants.Easing.easeOutQuart\n        }\n      };\n      return (0, _dealWithAnimation.dealWithAnimation)(withAnimation != null ? withAnimation : defaultWithAnimation)(toValue, callback);\n    };\n\n    _f._closure = {\n      runOnJS: _reactNativeReanimated.runOnJS,\n      onScrollEnd: onScrollEnd,\n      duration: duration,\n      Easing: {\n        easeOutQuart: _constants.Easing.easeOutQuart\n      },\n      dealWithAnimation: _dealWithAnimation.dealWithAnimation,\n      withAnimation: withAnimation\n    };\n    _f.asString = \"function _f(toValue,onFinished){const{runOnJS,onScrollEnd,duration,Easing,dealWithAnimation,withAnimation}=jsThis._closure;{var _withAnimation;const callback=function(isFinished){'worklet';if(isFinished){runOnJS(onScrollEnd)();onFinished&&runOnJS(onFinished)();}};const defaultWithAnimation={type:'timing',config:{duration:duration,easing:Easing.easeOutQuart}};return dealWithAnimation((_withAnimation=withAnimation)!==null&&_withAnimation!==void 0?_withAnimation:defaultWithAnimation)(toValue,callback);}}\";\n    _f.__workletHash = 15006680124176;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (136:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [duration, withAnimation, onScrollEnd]);\n\n  var next = _react.default.useCallback(function () {\n    var _f = function _f() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _opts$count = opts.count,\n          count = _opts$count === void 0 ? 1 : _opts$count,\n          _opts$animated = opts.animated,\n          animated = _opts$animated === void 0 ? true : _opts$animated,\n          onFinished = opts.onFinished;\n      if (!canSliding() || !loop && index.value >= dataInfo.length - 1) return;\n      onScrollBegin == null ? void 0 : onScrollBegin();\n      var nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n\n      if (animated) {\n        handlerOffsetX.value = scrollWithTiming(-nextPage * size, onFinished);\n      } else {\n        handlerOffsetX.value = -nextPage * size;\n        onFinished == null ? void 0 : onFinished();\n      }\n    };\n\n    _f._closure = {\n      canSliding: canSliding,\n      loop: loop,\n      index: index,\n      dataInfo: dataInfo,\n      onScrollBegin: onScrollBegin,\n      currentFixedPage: currentFixedPage,\n      handlerOffsetX: handlerOffsetX,\n      scrollWithTiming: scrollWithTiming,\n      size: size\n    };\n    _f.asString = \"function _f(opts={}){const{canSliding,loop,index,dataInfo,onScrollBegin,currentFixedPage,handlerOffsetX,scrollWithTiming,size}=jsThis._closure;{var _onScrollBegin;const{count=1,animated=true,onFinished:onFinished}=opts;if(!canSliding()||!loop&&index.value>=dataInfo.length-1)return;(_onScrollBegin=onScrollBegin)===null||_onScrollBegin===void 0?void 0:_onScrollBegin();const nextPage=currentFixedPage()+count;index.value=nextPage;if(animated){handlerOffsetX.value=scrollWithTiming(-nextPage*size,onFinished);}else{handlerOffsetX.value=-nextPage*size;onFinished===null||onFinished===void 0?void 0:onFinished();}}}\";\n    _f.__workletHash = 1734401141936;\n    _f.__location = \"/Users/zhaodonghao/code/github/react-native-reanimated-carousel/src/hooks/useCarouselController.tsx (160:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [canSliding, loop, index, dataInfo, onScrollBegin, handlerOffsetX, size, scrollWithTiming, currentFixedPage]);\n\n  var prev = _react.default.useCallback(function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _opts$count2 = opts.count,\n        count = _opts$count2 === void 0 ? 1 : _opts$count2,\n        _opts$animated2 = opts.animated,\n        animated = _opts$animated2 === void 0 ? true : _opts$animated2,\n        onFinished = opts.onFinished;\n    if (!canSliding() || !loop && index.value <= 0) return;\n    onScrollBegin == null ? void 0 : onScrollBegin();\n    var prevPage = currentFixedPage() - count;\n    index.value = prevPage;\n\n    if (animated) {\n      handlerOffsetX.value = scrollWithTiming(-prevPage * size, onFinished);\n    } else {\n      handlerOffsetX.value = -prevPage * size;\n      onFinished == null ? void 0 : onFinished();\n    }\n  }, [canSliding, loop, index, onScrollBegin, handlerOffsetX, size, scrollWithTiming, currentFixedPage]);\n\n  var to = _react.default.useCallback(function (opts) {\n    var i = opts.i,\n        _opts$animated3 = opts.animated,\n        animated = _opts$animated3 === void 0 ? false : _opts$animated3,\n        onFinished = opts.onFinished;\n    if (i === index.value) return;\n    if (!canSliding()) return;\n    onScrollBegin == null ? void 0 : onScrollBegin();\n    var offset = handlerOffsetX.value + (index.value - i) * size;\n\n    if (animated) {\n      index.value = i;\n      handlerOffsetX.value = scrollWithTiming(offset, onFinished);\n    } else {\n      handlerOffsetX.value = offset;\n      index.value = i;\n      onFinished == null ? void 0 : onFinished();\n    }\n  }, [index, canSliding, onScrollBegin, handlerOffsetX, size, scrollWithTiming]);\n\n  var scrollTo = _react.default.useCallback(function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var i = opts.index,\n        count = opts.count,\n        _opts$animated4 = opts.animated,\n        animated = _opts$animated4 === void 0 ? false : _opts$animated4,\n        onFinished = opts.onFinished;\n\n    if (typeof i === 'number' && i > -1) {\n      to({\n        i: i,\n        animated: animated,\n        onFinished: onFinished\n      });\n      return;\n    }\n\n    if (!count) {\n      return;\n    }\n\n    var n = Math.round(count);\n\n    if (n < 0) {\n      prev({\n        count: Math.abs(n),\n        animated: animated,\n        onFinished: onFinished\n      });\n    } else {\n      next({\n        count: n,\n        animated: animated,\n        onFinished: onFinished\n      });\n    }\n  }, [prev, next, to]);\n\n  return {\n    next: next,\n    prev: prev,\n    scrollTo: scrollTo,\n    getCurrentIndex: getCurrentIndex,\n    getSharedIndex: function getSharedIndex() {\n      return sharedIndex.current;\n    }\n  };\n}","map":{"version":3,"sources":["useCarouselController.tsx"],"names":["handlerOffsetX","onScrollEnd","round","size","runOnJS","onFinished","index","dataInfo","setSharedIndex","convertToSharedIndex","loop","canSliding","onScrollBegin","autoFillData","currentFixedPage","scrollWithTiming","duration","Easing","easeOutQuart","dealWithAnimation","withAnimation","data","defaultIndex","options","React","length","disable","originalLength","sharedIndex","sharedPreIndex","Math","fixed","handlerOffsetXValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","getCurrentIndex","callback","defaultWithAnimation","type","config","easing","next","opts","count","animated","nextPage","prev","prevPage","to","offset","scrollTo","n","getSharedIndex"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { Easing } from '../constants';\nimport {\n    runOnJS,\n    useAnimatedReaction,\n    useSharedValue,\n} from 'react-native-reanimated';\nimport type {\n    TCarouselActionOptions,\n    TCarouselProps,\n    WithTimingAnimation,\n} from '../types';\nimport { dealWithAnimation } from '@/utils/dealWithAnimation';\nimport { convertToSharedIndex } from '@/utils/computedWithAutoFillData';\nimport { round } from '@/utils/log';\n\ninterface IOpts {\n    loop: boolean;\n    size: number;\n    data: TCarouselProps['data'];\n    autoFillData: TCarouselProps['autoFillData'];\n    handlerOffsetX: Animated.SharedValue<number>;\n    withAnimation?: TCarouselProps['withAnimation'];\n    duration?: number;\n    defaultIndex?: number;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n}\n\nexport interface ICarouselController {\n    getSharedIndex: () => number;\n    prev: (opts?: TCarouselActionOptions) => void;\n    next: (opts?: TCarouselActionOptions) => void;\n    getCurrentIndex: () => number;\n    scrollTo: (opts?: TCarouselActionOptions) => void;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n    const {\n        size,\n        data,\n        loop,\n        handlerOffsetX,\n        withAnimation,\n        defaultIndex = 0,\n        duration,\n        autoFillData,\n    } = options;\n\n    const dataInfo = React.useMemo(\n        () => ({\n            length: data.length,\n            disable: !data.length,\n            originalLength: data.length,\n        }),\n        [data]\n    );\n\n    const index = useSharedValue<number>(defaultIndex);\n    // The Index displayed to the user\n    const sharedIndex = useRef<number>(defaultIndex);\n    const sharedPreIndex = useRef<number>(defaultIndex);\n\n    const currentFixedPage = React.useCallback(() => {\n        if (loop) {\n            return -Math.round(handlerOffsetX.value / size);\n        }\n\n        const fixed = (handlerOffsetX.value / size) % dataInfo.length;\n        return Math.round(\n            handlerOffsetX.value <= 0\n                ? Math.abs(fixed)\n                : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0)\n        );\n    }, [handlerOffsetX, dataInfo, size, loop]);\n\n    function setSharedIndex(newSharedIndex: number) {\n        sharedIndex.current = newSharedIndex;\n    }\n\n    useAnimatedReaction(\n        () => {\n            const handlerOffsetXValue = handlerOffsetX.value;\n            const toInt = round(handlerOffsetXValue / size) % dataInfo.length;\n            const isPositive = handlerOffsetXValue <= 0;\n            const i = isPositive\n                ? Math.abs(toInt)\n                : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n            const newSharedIndexValue = convertToSharedIndex({\n                loop,\n                rawDataLength: dataInfo.originalLength,\n                autoFillData: autoFillData!,\n                index: i,\n            });\n\n            return {\n                i,\n                newSharedIndexValue,\n            };\n        },\n        ({ i, newSharedIndexValue }) => {\n            index.value = i;\n            runOnJS(setSharedIndex)(newSharedIndexValue);\n        },\n        [\n            sharedPreIndex,\n            sharedIndex,\n            size,\n            dataInfo,\n            index,\n            loop,\n            autoFillData,\n            handlerOffsetX,\n        ]\n    );\n\n    const getCurrentIndex = React.useCallback(() => {\n        return index.value;\n    }, [index]);\n\n    const canSliding = React.useCallback(() => {\n        return !dataInfo.disable;\n    }, [dataInfo]);\n\n    const onScrollEnd = React.useCallback(() => {\n        options.onScrollEnd?.();\n    }, [options]);\n\n    const onScrollBegin = React.useCallback(() => {\n        options.onScrollBegin?.();\n    }, [options]);\n\n    const scrollWithTiming = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            'worklet';\n            const callback = (isFinished: boolean) => {\n                'worklet';\n                if (isFinished) {\n                    runOnJS(onScrollEnd)();\n                    onFinished && runOnJS(onFinished)();\n                }\n            };\n\n            const defaultWithAnimation: WithTimingAnimation = {\n                type: 'timing',\n                config: { duration, easing: Easing.easeOutQuart },\n            };\n\n            return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n                toValue,\n                callback\n            );\n        },\n        [duration, withAnimation, onScrollEnd]\n    );\n\n    const next = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            'worklet';\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value >= dataInfo.length - 1))\n                return;\n\n            onScrollBegin?.();\n\n            const nextPage = currentFixedPage() + count;\n            index.value = nextPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -nextPage * size,\n                    onFinished\n                ) as any;\n            } else {\n                handlerOffsetX.value = -nextPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            dataInfo,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const prev = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value <= 0)) return;\n\n            onScrollBegin?.();\n\n            const prevPage = currentFixedPage() - count;\n            index.value = prevPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -prevPage * size,\n                    onFinished\n                );\n            } else {\n                handlerOffsetX.value = -prevPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const to = React.useCallback(\n        (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n            const { i, animated = false, onFinished } = opts;\n            if (i === index.value) return;\n            if (!canSliding()) return;\n\n            onScrollBegin?.();\n\n            const offset = handlerOffsetX.value + (index.value - i) * size;\n\n            if (animated) {\n                index.value = i;\n                handlerOffsetX.value = scrollWithTiming(offset, onFinished);\n            } else {\n                handlerOffsetX.value = offset;\n                index.value = i;\n                onFinished?.();\n            }\n        },\n        [\n            index,\n            canSliding,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n        ]\n    );\n\n    const scrollTo = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { index: i, count, animated = false, onFinished } = opts;\n\n            if (typeof i === 'number' && i > -1) {\n                to({ i, animated, onFinished });\n                return;\n            }\n\n            if (!count) {\n                return;\n            }\n\n            const n = Math.round(count);\n\n            if (n < 0) {\n                prev({ count: Math.abs(n), animated, onFinished });\n            } else {\n                next({ count: n, animated, onFinished });\n            }\n        },\n        [prev, next, to]\n    );\n\n    return {\n        next,\n        prev,\n        scrollTo,\n        getCurrentIndex,\n        getSharedIndex: () => sharedIndex.current,\n    };\n}\n"]},"metadata":{},"sourceType":"script"}